ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_pwr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWR_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_PWR_DeInit:
  26              	.LFB126:
  27              		.file 1 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/
   1:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
   2:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         
  11:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @attention
  13:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *
  14:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  15:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *
  16:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * are permitted provided that the following conditions are met:
  18:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *      this list of conditions and the following disclaimer.
  20:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *      and/or other materials provided with the distribution.
  23:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *      may be used to endorse or promote products derived from this software
  25:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *      without specific prior written permission.
  26:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *
  27:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 2


  32:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *
  38:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   ******************************************************************************
  39:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */ 
  40:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  41:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  42:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  43:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  44:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  45:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @{
  46:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
  47:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  48:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
  49:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  50:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @{
  51:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
  52:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  53:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  54:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  55:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  56:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  57:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  58:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @{
  59:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
  60:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
  61:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  62:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @{
  63:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */     
  64:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  65:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  66:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  67:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  68:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
  69:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @}
  70:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
  71:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  72:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
  73:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @}
  74:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */    
  75:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  76:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  77:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  78:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  79:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  80:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  81:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @{
  82:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
  83:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
  84:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  85:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  86:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *
  87:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** @verbatim
  88:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****  ===============================================================================
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 3


  89:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  90:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****  ===============================================================================
  91:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
  92:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  93:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  94:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       write accesses. 
  95:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  96:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  97:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  98:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  99:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****  
 100:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** @endverbatim
 101:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @{
 102:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 103:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 104:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 105:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
 106:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 107:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 108:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
 109:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
  28              		.loc 1 109 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 110:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  33              		.loc 1 110 0
  34 0000 044B     		ldr	r3, .L2
  35 0002 1A6A     		ldr	r2, [r3, #32]
  36 0004 42F08052 		orr	r2, r2, #268435456
  37 0008 1A62     		str	r2, [r3, #32]
 111:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  38              		.loc 1 111 0
  39 000a 1A6A     		ldr	r2, [r3, #32]
  40 000c 22F08052 		bic	r2, r2, #268435456
  41 0010 1A62     		str	r2, [r3, #32]
 112:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
  42              		.loc 1 112 0
  43 0012 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0014 00380240 		.word	1073887232
  48              		.cfi_endproc
  49              	.LFE126:
  51              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  52              		.align	1
  53              		.global	HAL_PWR_EnableBkUpAccess
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	HAL_PWR_EnableBkUpAccess:
  60              	.LFB127:
 113:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 114:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 4


 115:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
 116:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 117:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 118:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 119:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 120:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 121:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 122:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
  61              		.loc 1 122 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 123:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  66              		.loc 1 123 0
  67 0000 014B     		ldr	r3, .L5
  68 0002 0122     		movs	r2, #1
  69 0004 1A60     		str	r2, [r3]
 124:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
  70              		.loc 1 124 0
  71 0006 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 0008 20000E42 		.word	1108213792
  76              		.cfi_endproc
  77              	.LFE127:
  79              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_PWR_DisableBkUpAccess
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	HAL_PWR_DisableBkUpAccess:
  88              	.LFB128:
 125:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 126:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 127:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 128:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 129:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 130:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 131:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 132:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 133:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 134:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
  89              		.loc 1 134 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 135:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
  94              		.loc 1 135 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 0022     		movs	r2, #0
  97 0004 1A60     		str	r2, [r3]
 136:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 5


  98              		.loc 1 136 0
  99 0006 7047     		bx	lr
 100              	.L9:
 101              		.align	2
 102              	.L8:
 103 0008 20000E42 		.word	1108213792
 104              		.cfi_endproc
 105              	.LFE128:
 107              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 108              		.align	1
 109              		.global	HAL_PWR_ConfigPVD
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	HAL_PWR_ConfigPVD:
 116              	.LFB129:
 137:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 138:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 139:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @}
 140:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 141:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 142:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 143:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 144:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *
 145:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** @verbatim
 146:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 147:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****  ===============================================================================
 148:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 149:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****  ===============================================================================
 150:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****      
 151:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 152:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     =========================
 153:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
 154:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 155:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 156:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 157:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 158:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 159:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 160:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 161:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 162:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 163:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     ================================
 164:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
 165:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 166:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 167:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 168:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 169:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 170:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 171:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 172:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     =====================================
 173:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
 174:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 175:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 176:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 6


 177:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           in low power mode
 178:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 179:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    
 180:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 181:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    ==================
 182:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
 183:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Entry:
 184:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLE
 185:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****               functions with
 186:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 187:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 188:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       
 189:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 190:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
 191:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 192:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Exit:
 193:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 194:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 195:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 196:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 197:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    =================
 198:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
 199:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 200:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 201:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       are preserved.
 202:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 203:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 204:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 205:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 206:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 207:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 208:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Entry:
 209:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON) 
 210:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****              function with:
 211:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           (++) Main regulator ON.
 212:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****           (++) Low Power regulator ON.
 213:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) Exit:
 214:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 215:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 216:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 217:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    ====================
 218:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
 219:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     (+)
 220:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 221:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 222:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 223:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 224:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 225:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       circuitry.
 226:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    
 227:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 228:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       
 229:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (++) Entry:
 230:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 231:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (++) Exit:
 232:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
 233:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 7


 234:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 235:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 236:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    =============================================
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     [..]
 238:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     
 239:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 240:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 241:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 242:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 243:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
 244:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****        
 245:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 246:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 247:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 248:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 249:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 250:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 251:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****                   
 252:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 253:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 254:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 255:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** @endverbatim
 256:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @{
 257:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 258:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 259:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 260:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 261:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 262:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 263:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 264:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 265:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         detection level.
 266:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 267:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 268:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 269:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 117              		.loc 1 269 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              	.LVL0:
 122 0000 10B5     		push	{r4, lr}
 123              	.LCFI0:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 127 0002 0446     		mov	r4, r0
 270:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 271:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 128              		.loc 1 271 0
 129 0004 0368     		ldr	r3, [r0]
 130 0006 6BB1     		cbz	r3, .L11
 131              		.loc 1 271 0 is_stmt 0 discriminator 1
 132 0008 202B     		cmp	r3, #32
 133 000a 0BD0     		beq	.L11
 134              		.loc 1 271 0 discriminator 2
 135 000c 402B     		cmp	r3, #64
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 8


 136 000e 09D0     		beq	.L11
 137              		.loc 1 271 0 discriminator 3
 138 0010 602B     		cmp	r3, #96
 139 0012 07D0     		beq	.L11
 140              		.loc 1 271 0 discriminator 4
 141 0014 802B     		cmp	r3, #128
 142 0016 05D0     		beq	.L11
 143              		.loc 1 271 0 discriminator 5
 144 0018 A02B     		cmp	r3, #160
 145 001a 03D0     		beq	.L11
 146              		.loc 1 271 0 discriminator 6
 147 001c C02B     		cmp	r3, #192
 148 001e 01D0     		beq	.L11
 149              		.loc 1 271 0 discriminator 7
 150 0020 E02B     		cmp	r3, #224
 151 0022 4CD1     		bne	.L18
 152              	.LVL1:
 153              	.L11:
 272:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 154              		.loc 1 272 0 is_stmt 1
 155 0024 6368     		ldr	r3, [r4, #4]
 156 0026 A3F10112 		sub	r2, r3, #65537
 157 002a 022A     		cmp	r2, #2
 158 002c 0AD9     		bls	.L12
 159              		.loc 1 272 0 is_stmt 0 discriminator 1
 160 002e 2A4A     		ldr	r2, .L20
 161 0030 9342     		cmp	r3, r2
 162 0032 07D0     		beq	.L12
 163              		.loc 1 272 0 discriminator 2
 164 0034 B3F1021F 		cmp	r3, #131074
 165 0038 04D0     		beq	.L12
 166              		.loc 1 272 0 discriminator 3
 167 003a 0232     		adds	r2, r2, #2
 168 003c 9342     		cmp	r3, r2
 169 003e 01D0     		beq	.L12
 170              		.loc 1 272 0 discriminator 4
 171 0040 002B     		cmp	r3, #0
 172 0042 42D1     		bne	.L19
 173              	.L12:
 273:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 274:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 275:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 174              		.loc 1 275 0 is_stmt 1
 175 0044 254A     		ldr	r2, .L20+4
 176 0046 1368     		ldr	r3, [r2]
 177 0048 23F0E003 		bic	r3, r3, #224
 178 004c 2168     		ldr	r1, [r4]
 179 004e 0B43     		orrs	r3, r3, r1
 180 0050 1360     		str	r3, [r2]
 276:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 277:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 278:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 181              		.loc 1 278 0
 182 0052 234B     		ldr	r3, .L20+8
 183 0054 5A68     		ldr	r2, [r3, #4]
 184 0056 22F48032 		bic	r2, r2, #65536
 185 005a 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 9


 279:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 186              		.loc 1 279 0
 187 005c 1A68     		ldr	r2, [r3]
 188 005e 22F48032 		bic	r2, r2, #65536
 189 0062 1A60     		str	r2, [r3]
 280:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 190              		.loc 1 280 0
 191 0064 9A68     		ldr	r2, [r3, #8]
 192 0066 22F48032 		bic	r2, r2, #65536
 193 006a 9A60     		str	r2, [r3, #8]
 281:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 194              		.loc 1 281 0
 195 006c DA68     		ldr	r2, [r3, #12]
 196 006e 22F48032 		bic	r2, r2, #65536
 197 0072 DA60     		str	r2, [r3, #12]
 282:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 283:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 284:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 198              		.loc 1 284 0
 199 0074 6368     		ldr	r3, [r4, #4]
 200 0076 13F4803F 		tst	r3, #65536
 201 007a 04D0     		beq	.L13
 285:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 286:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 202              		.loc 1 286 0
 203 007c 184A     		ldr	r2, .L20+8
 204 007e 1368     		ldr	r3, [r2]
 205 0080 43F48033 		orr	r3, r3, #65536
 206 0084 1360     		str	r3, [r2]
 207              	.L13:
 287:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 288:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 289:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 290:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 208              		.loc 1 290 0
 209 0086 6368     		ldr	r3, [r4, #4]
 210 0088 13F4003F 		tst	r3, #131072
 211 008c 04D0     		beq	.L14
 291:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 292:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 212              		.loc 1 292 0
 213 008e 144A     		ldr	r2, .L20+8
 214 0090 5368     		ldr	r3, [r2, #4]
 215 0092 43F48033 		orr	r3, r3, #65536
 216 0096 5360     		str	r3, [r2, #4]
 217              	.L14:
 293:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 294:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 295:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 296:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 218              		.loc 1 296 0
 219 0098 6368     		ldr	r3, [r4, #4]
 220 009a 13F0010F 		tst	r3, #1
 221 009e 04D0     		beq	.L15
 297:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 298:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 222              		.loc 1 298 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 10


 223 00a0 0F4A     		ldr	r2, .L20+8
 224 00a2 9368     		ldr	r3, [r2, #8]
 225 00a4 43F48033 		orr	r3, r3, #65536
 226 00a8 9360     		str	r3, [r2, #8]
 227              	.L15:
 299:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 300:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 301:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 228              		.loc 1 301 0
 229 00aa 6368     		ldr	r3, [r4, #4]
 230 00ac 13F0020F 		tst	r3, #2
 231 00b0 04D0     		beq	.L10
 302:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 303:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 232              		.loc 1 303 0
 233 00b2 0B4A     		ldr	r2, .L20+8
 234 00b4 D368     		ldr	r3, [r2, #12]
 235 00b6 43F48033 		orr	r3, r3, #65536
 236 00ba D360     		str	r3, [r2, #12]
 237              	.L10:
 304:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 305:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 238              		.loc 1 305 0
 239 00bc 10BD     		pop	{r4, pc}
 240              	.LVL2:
 241              	.L18:
 271:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 242              		.loc 1 271 0 discriminator 8
 243 00be 40F20F11 		movw	r1, #271
 244 00c2 0848     		ldr	r0, .L20+12
 245              	.LVL3:
 246 00c4 FFF7FEFF 		bl	assert_failed
 247              	.LVL4:
 248 00c8 ACE7     		b	.L11
 249              	.L19:
 272:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 250              		.loc 1 272 0 discriminator 5
 251 00ca 4FF48871 		mov	r1, #272
 252 00ce 0548     		ldr	r0, .L20+12
 253 00d0 FFF7FEFF 		bl	assert_failed
 254              	.LVL5:
 255 00d4 B6E7     		b	.L12
 256              	.L21:
 257 00d6 00BF     		.align	2
 258              	.L20:
 259 00d8 01000200 		.word	131073
 260 00dc 00700040 		.word	1073770496
 261 00e0 003C0140 		.word	1073822720
 262 00e4 00000000 		.word	.LC0
 263              		.cfi_endproc
 264              	.LFE129:
 266              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_PWR_EnablePVD
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 11


 272              		.fpu fpv4-sp-d16
 274              	HAL_PWR_EnablePVD:
 275              	.LFB130:
 306:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 307:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 308:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 309:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 310:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 311:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 312:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 276              		.loc 1 312 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 313:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 281              		.loc 1 313 0
 282 0000 014B     		ldr	r3, .L23
 283 0002 0122     		movs	r2, #1
 284 0004 1A60     		str	r2, [r3]
 314:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 285              		.loc 1 314 0
 286 0006 7047     		bx	lr
 287              	.L24:
 288              		.align	2
 289              	.L23:
 290 0008 10000E42 		.word	1108213776
 291              		.cfi_endproc
 292              	.LFE130:
 294              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 295              		.align	1
 296              		.global	HAL_PWR_DisablePVD
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	HAL_PWR_DisablePVD:
 303              	.LFB131:
 315:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 316:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 317:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 318:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 319:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 320:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 321:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 304              		.loc 1 321 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 322:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 309              		.loc 1 322 0
 310 0000 014B     		ldr	r3, .L26
 311 0002 0022     		movs	r2, #0
 312 0004 1A60     		str	r2, [r3]
 323:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 313              		.loc 1 323 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 12


 314 0006 7047     		bx	lr
 315              	.L27:
 316              		.align	2
 317              	.L26:
 318 0008 10000E42 		.word	1108213776
 319              		.cfi_endproc
 320              	.LFE131:
 322              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_PWR_EnableWakeUpPin
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu fpv4-sp-d16
 330              	HAL_PWR_EnableWakeUpPin:
 331              	.LFB132:
 324:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 325:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 326:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
 327:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 328:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 329:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 330:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 331:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 332:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 333:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 334:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 335:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 332              		.loc 1 335 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL6:
 337 0000 10B5     		push	{r4, lr}
 338              	.LCFI1:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
 342 0002 0446     		mov	r4, r0
 336:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 337:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 343              		.loc 1 337 0
 344 0004 B0F5807F 		cmp	r0, #256
 345 0008 04D0     		beq	.L29
 346              		.loc 1 337 0 is_stmt 0 discriminator 1
 347 000a 40F25111 		movw	r1, #337
 348 000e 0448     		ldr	r0, .L31
 349              	.LVL7:
 350 0010 FFF7FEFF 		bl	assert_failed
 351              	.LVL8:
 352              	.L29:
 338:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 339:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 340:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 353              		.loc 1 340 0 is_stmt 1
 354 0014 034B     		ldr	r3, .L31+4
 355 0016 5868     		ldr	r0, [r3, #4]
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 13


 356 0018 2043     		orrs	r0, r0, r4
 357 001a 5860     		str	r0, [r3, #4]
 341:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 358              		.loc 1 341 0
 359 001c 10BD     		pop	{r4, pc}
 360              	.LVL9:
 361              	.L32:
 362 001e 00BF     		.align	2
 363              	.L31:
 364 0020 00000000 		.word	.LC0
 365 0024 00700040 		.word	1073770496
 366              		.cfi_endproc
 367              	.LFE132:
 369              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 370              		.align	1
 371              		.global	HAL_PWR_DisableWakeUpPin
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	HAL_PWR_DisableWakeUpPin:
 378              	.LFB133:
 342:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 343:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 344:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 345:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 346:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 347:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 348:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 349:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 350:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 351:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 352:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 353:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 379              		.loc 1 353 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL10:
 384 0000 10B5     		push	{r4, lr}
 385              	.LCFI2:
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 389 0002 0446     		mov	r4, r0
 354:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 355:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 390              		.loc 1 355 0
 391 0004 B0F5807F 		cmp	r0, #256
 392 0008 04D0     		beq	.L34
 393              		.loc 1 355 0 is_stmt 0 discriminator 1
 394 000a 40F26311 		movw	r1, #355
 395 000e 0448     		ldr	r0, .L36
 396              	.LVL11:
 397 0010 FFF7FEFF 		bl	assert_failed
 398              	.LVL12:
 399              	.L34:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 14


 356:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 357:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 358:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 400              		.loc 1 358 0 is_stmt 1
 401 0014 034B     		ldr	r3, .L36+4
 402 0016 5868     		ldr	r0, [r3, #4]
 403 0018 20EA0400 		bic	r0, r0, r4
 404 001c 5860     		str	r0, [r3, #4]
 359:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 405              		.loc 1 359 0
 406 001e 10BD     		pop	{r4, pc}
 407              	.LVL13:
 408              	.L37:
 409              		.align	2
 410              	.L36:
 411 0020 00000000 		.word	.LC0
 412 0024 00700040 		.word	1073770496
 413              		.cfi_endproc
 414              	.LFE133:
 416              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 417              		.align	1
 418              		.global	HAL_PWR_EnterSLEEPMode
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu fpv4-sp-d16
 424              	HAL_PWR_EnterSLEEPMode:
 425              	.LFB134:
 360:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 361:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 362:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 363:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *   
 364:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 365:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * 
 366:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 367:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 368:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *                
 369:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 370:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 371:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 372:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 373:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 374:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 375:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 376:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 377:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 378:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 379:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 380:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 381:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 382:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 426              		.loc 1 382 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              	.LVL14:
 431 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 15


 432              	.LCFI3:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
 436 0002 0C46     		mov	r4, r1
 383:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 384:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 437              		.loc 1 384 0
 438 0004 0128     		cmp	r0, #1
 439 0006 0ED8     		bhi	.L44
 440              	.LVL15:
 441              	.L39:
 385:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 442              		.loc 1 385 0
 443 0008 631E     		subs	r3, r4, #1
 444 000a DBB2     		uxtb	r3, r3
 445 000c 012B     		cmp	r3, #1
 446 000e 10D8     		bhi	.L45
 447              	.L40:
 386:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 387:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 388:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 448              		.loc 1 388 0
 449 0010 0C4A     		ldr	r2, .L47
 450 0012 1369     		ldr	r3, [r2, #16]
 451 0014 23F00403 		bic	r3, r3, #4
 452 0018 1361     		str	r3, [r2, #16]
 389:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 390:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 391:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 453              		.loc 1 391 0
 454 001a 012C     		cmp	r4, #1
 455 001c 0FD0     		beq	.L46
 456              	.LBB20:
 457              	.LBB21:
 458              		.file 2 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_g
   1:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @version  V4.30
   5:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  * @date     20. October 2015
   6:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
   9:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    All rights reserved.
  10:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****      specific prior written permission.
  20:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    *
  21:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 16


  22:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  35:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  38:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  39:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  41:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
  45:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  46:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  47:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
  51:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  52:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  53:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  54:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  58:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  60:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  62:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  63:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  64:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  65:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  69:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  71:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  73:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  74:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  75:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  76:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
  77:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 17


  79:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  80:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  82:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
  83:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  84:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
  86:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  87:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  88:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  89:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
  91:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
  96:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
  98:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
  99:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 100:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 102:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 104:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 107:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 109:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 112:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 113:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 114:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 115:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 116:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 118:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 119:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 121:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 122:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 123:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 125:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 126:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 127:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 128:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 129:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 130:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 132:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****     \return               xPSR Register value
 133:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 134:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 18


 136:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 137:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 138:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 140:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 141:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 142:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 143:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 144:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 147:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 148:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 150:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 151:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 152:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 154:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 155:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 156:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 157:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 158:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 162:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 164:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 166:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 167:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 168:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 169:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 172:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 173:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 175:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 176:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 180:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 182:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 183:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 186:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 188:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 190:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 192:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 19


 193:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 194:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 195:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 196:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 198:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 199:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 201:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 202:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 203:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 205:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 206:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 207:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 208:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 209:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 210:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 213:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 215:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 217:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 218:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 219:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 221:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 222:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 223:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 226:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 228:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 230:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 231:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 232:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 233:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 234:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 239:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 241:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 243:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 245:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 247:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 20


 250:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 251:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 252:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 254:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 255:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 256:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 257:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 258:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 259:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 262:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 264:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 266:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 267:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 268:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 269:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 274:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 276:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 278:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 279:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 281:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 282:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 284:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 285:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 287:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 288:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 289:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 291:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 292:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 293:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 294:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 295:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 296:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 299:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 301:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 303:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 306:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 21


 307:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 311:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 316:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 318:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 319:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 321:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 323:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   return(result);
 324:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 325:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****    return(0);
 326:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 327:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 328:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 329:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 330:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 331:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 332:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 335:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 337:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 340:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 342:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 343:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 344:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 345:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 347:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 348:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 351:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 352:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 355:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   @{
 356:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** */
 357:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 358:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 22


 364:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #else
 365:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** #endif
 368:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 369:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 370:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 371:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 373:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 375:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("nop");
 376:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 377:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 378:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 379:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 380:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 385:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 387:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 388:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 389:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 390:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 391:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 394:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 396:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 398:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 399:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** 
 400:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** /**
 401:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 402:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****  */
 404:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** {
 406:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sev");
 459              		.loc 2 406 0
 460              		.syntax unified
 461              	@ 406 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 462 001e 40BF     		sev
 463              	@ 0 "" 2
 464              		.thumb
 465              		.syntax unified
 466              	.LBE21:
 467              	.LBE20:
 468              	.LBB22:
 469              	.LBB23:
 396:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 470              		.loc 2 396 0
 471              		.syntax unified
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 23


 472              	@ 396 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 473 0020 20BF     		wfe
 474              	@ 0 "" 2
 475              		.thumb
 476              		.syntax unified
 477              	.LBE23:
 478              	.LBE22:
 479              	.LBB24:
 480              	.LBB25:
 481              		.syntax unified
 482              	@ 396 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 483 0022 20BF     		wfe
 484              	@ 0 "" 2
 485              		.thumb
 486              		.syntax unified
 487              	.L38:
 488              	.LBE25:
 489              	.LBE24:
 392:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {   
 393:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 394:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __WFI();
 395:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 396:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   else
 397:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 398:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 399:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __SEV();
 400:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __WFE();
 401:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __WFE();
 402:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 403:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 490              		.loc 1 403 0
 491 0024 10BD     		pop	{r4, pc}
 492              	.LVL16:
 493              	.L44:
 384:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 494              		.loc 1 384 0 discriminator 1
 495 0026 4FF4C071 		mov	r1, #384
 496              	.LVL17:
 497 002a 0748     		ldr	r0, .L47+4
 498              	.LVL18:
 499 002c FFF7FEFF 		bl	assert_failed
 500              	.LVL19:
 501 0030 EAE7     		b	.L39
 502              	.L45:
 385:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 503              		.loc 1 385 0 discriminator 1
 504 0032 40F28111 		movw	r1, #385
 505 0036 0448     		ldr	r0, .L47+4
 506 0038 FFF7FEFF 		bl	assert_failed
 507              	.LVL20:
 508 003c E8E7     		b	.L40
 509              	.L46:
 510              	.LBB26:
 511              	.LBB27:
 385:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 512              		.loc 2 385 0
 513              		.syntax unified
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 24


 514              	@ 385 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 515 003e 30BF     		wfi
 516              	@ 0 "" 2
 517              		.thumb
 518              		.syntax unified
 519 0040 F0E7     		b	.L38
 520              	.L48:
 521 0042 00BF     		.align	2
 522              	.L47:
 523 0044 00ED00E0 		.word	-536810240
 524 0048 00000000 		.word	.LC0
 525              	.LBE27:
 526              	.LBE26:
 527              		.cfi_endproc
 528              	.LFE134:
 530              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 531              		.align	1
 532              		.global	HAL_PWR_EnterSTOPMode
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu fpv4-sp-d16
 538              	HAL_PWR_EnterSTOPMode:
 539              	.LFB135:
 404:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 405:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 406:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 407:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 408:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 409:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 410:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 411:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 412:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 413:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 414:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 415:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 416:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 417:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 418:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 419:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 420:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 421:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction
 422:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 423:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 424:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 425:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 540              		.loc 1 425 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              	.LVL21:
 545 0000 38B5     		push	{r3, r4, r5, lr}
 546              	.LCFI4:
 547              		.cfi_def_cfa_offset 16
 548              		.cfi_offset 3, -16
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 5, -8
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 25


 551              		.cfi_offset 14, -4
 552 0002 0546     		mov	r5, r0
 553 0004 0C46     		mov	r4, r1
 426:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 427:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 554              		.loc 1 427 0
 555 0006 0128     		cmp	r0, #1
 556 0008 19D8     		bhi	.L55
 557              	.LVL22:
 558              	.L50:
 428:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 559              		.loc 1 428 0
 560 000a 631E     		subs	r3, r4, #1
 561 000c DBB2     		uxtb	r3, r3
 562 000e 012B     		cmp	r3, #1
 563 0010 1BD8     		bhi	.L56
 564              	.L51:
 429:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 430:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 431:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 565              		.loc 1 431 0
 566 0012 124B     		ldr	r3, .L58
 567 0014 1868     		ldr	r0, [r3]
 568 0016 20F00300 		bic	r0, r0, #3
 569 001a 2843     		orrs	r0, r0, r5
 570 001c 1860     		str	r0, [r3]
 432:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 433:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 434:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 571              		.loc 1 434 0
 572 001e 104A     		ldr	r2, .L58+4
 573 0020 1369     		ldr	r3, [r2, #16]
 574 0022 43F00403 		orr	r3, r3, #4
 575 0026 1361     		str	r3, [r2, #16]
 435:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 436:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 437:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 576              		.loc 1 437 0
 577 0028 012C     		cmp	r4, #1
 578 002a 14D0     		beq	.L57
 579              	.LBB28:
 580              	.LBB29:
 581              		.loc 2 406 0
 582              		.syntax unified
 583              	@ 406 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 584 002c 40BF     		sev
 585              	@ 0 "" 2
 586              		.thumb
 587              		.syntax unified
 588              	.LBE29:
 589              	.LBE28:
 590              	.LBB30:
 591              	.LBB31:
 396:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 592              		.loc 2 396 0
 593              		.syntax unified
 594              	@ 396 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 26


 595 002e 20BF     		wfe
 596              	@ 0 "" 2
 597              		.thumb
 598              		.syntax unified
 599              	.LBE31:
 600              	.LBE30:
 601              	.LBB32:
 602              	.LBB33:
 603              		.syntax unified
 604              	@ 396 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 605 0030 20BF     		wfe
 606              	@ 0 "" 2
 607              		.thumb
 608              		.syntax unified
 609              	.L53:
 610              	.LBE33:
 611              	.LBE32:
 438:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {   
 439:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 440:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __WFI();
 441:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 442:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   else
 443:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 444:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 445:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __SEV();
 446:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __WFE();
 447:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __WFE();
 448:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 449:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 450:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 612              		.loc 1 450 0
 613 0032 0B4A     		ldr	r2, .L58+4
 614 0034 1369     		ldr	r3, [r2, #16]
 615 0036 23F00403 		bic	r3, r3, #4
 616 003a 1361     		str	r3, [r2, #16]
 451:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 617              		.loc 1 451 0
 618 003c 38BD     		pop	{r3, r4, r5, pc}
 619              	.LVL23:
 620              	.L55:
 427:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 621              		.loc 1 427 0 discriminator 1
 622 003e 40F2AB11 		movw	r1, #427
 623              	.LVL24:
 624 0042 0848     		ldr	r0, .L58+8
 625              	.LVL25:
 626 0044 FFF7FEFF 		bl	assert_failed
 627              	.LVL26:
 628 0048 DFE7     		b	.L50
 629              	.L56:
 428:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 630              		.loc 1 428 0 discriminator 1
 631 004a 4FF4D671 		mov	r1, #428
 632 004e 0548     		ldr	r0, .L58+8
 633 0050 FFF7FEFF 		bl	assert_failed
 634              	.LVL27:
 635 0054 DDE7     		b	.L51
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 27


 636              	.L57:
 637              	.LBB34:
 638              	.LBB35:
 385:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 639              		.loc 2 385 0
 640              		.syntax unified
 641              	@ 385 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 642 0056 30BF     		wfi
 643              	@ 0 "" 2
 644              		.thumb
 645              		.syntax unified
 646 0058 EBE7     		b	.L53
 647              	.L59:
 648 005a 00BF     		.align	2
 649              	.L58:
 650 005c 00700040 		.word	1073770496
 651 0060 00ED00E0 		.word	-536810240
 652 0064 00000000 		.word	.LC0
 653              	.LBE35:
 654              	.LBE34:
 655              		.cfi_endproc
 656              	.LFE135:
 658              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 659              		.align	1
 660              		.global	HAL_PWR_EnterSTANDBYMode
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu fpv4-sp-d16
 666              	HAL_PWR_EnterSTANDBYMode:
 667              	.LFB136:
 452:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 453:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 454:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 455:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 456:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 457:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 458:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 459:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 460:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 461:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 462:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 463:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 464:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 668              		.loc 1 464 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 465:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 466:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 673              		.loc 1 466 0
 674 0000 054A     		ldr	r2, .L61
 675 0002 1368     		ldr	r3, [r2]
 676 0004 43F00203 		orr	r3, r3, #2
 677 0008 1360     		str	r3, [r2]
 467:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 28


 468:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 469:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 678              		.loc 1 469 0
 679 000a 044A     		ldr	r2, .L61+4
 680 000c 1369     		ldr	r3, [r2, #16]
 681 000e 43F00403 		orr	r3, r3, #4
 682 0012 1361     		str	r3, [r2, #16]
 683              	.LBB36:
 684              	.LBB37:
 385:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include\cmsis_gcc.h **** }
 685              		.loc 2 385 0
 686              		.syntax unified
 687              	@ 385 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/cmsis_gcc.
 688 0014 30BF     		wfi
 689              	@ 0 "" 2
 690              		.thumb
 691              		.syntax unified
 692              	.LBE37:
 693              	.LBE36:
 470:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   
 471:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 472:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 473:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __force_stores();
 474:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** #endif
 475:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 476:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   __WFI();
 477:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 694              		.loc 1 477 0
 695 0016 7047     		bx	lr
 696              	.L62:
 697              		.align	2
 698              	.L61:
 699 0018 00700040 		.word	1073770496
 700 001c 00ED00E0 		.word	-536810240
 701              		.cfi_endproc
 702              	.LFE136:
 704              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 705              		.align	1
 706              		.weak	HAL_PWR_PVDCallback
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu fpv4-sp-d16
 712              	HAL_PWR_PVDCallback:
 713              	.LFB138:
 478:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 479:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 480:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 481:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 482:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 483:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 484:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 485:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 486:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 487:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 488:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 489:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 29


 490:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 491:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     
 492:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 493:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 494:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 495:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 496:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 497:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 498:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 499:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 500:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 501:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 502:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 714              		.loc 1 502 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 503:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 504:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 505:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****    */ 
 506:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 719              		.loc 1 506 0
 720 0000 7047     		bx	lr
 721              		.cfi_endproc
 722              	.LFE138:
 724              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 725              		.align	1
 726              		.global	HAL_PWR_PVD_IRQHandler
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
 732              	HAL_PWR_PVD_IRQHandler:
 733              	.LFB137:
 485:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 734              		.loc 1 485 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738 0000 08B5     		push	{r3, lr}
 739              	.LCFI5:
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 3, -8
 742              		.cfi_offset 14, -4
 487:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   {
 743              		.loc 1 487 0
 744 0002 064B     		ldr	r3, .L68
 745 0004 5B69     		ldr	r3, [r3, #20]
 746 0006 13F4803F 		tst	r3, #65536
 747 000a 00D1     		bne	.L67
 748              	.L64:
 495:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 749              		.loc 1 495 0
 750 000c 08BD     		pop	{r3, pc}
 751              	.L67:
 490:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****     
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 30


 752              		.loc 1 490 0
 753 000e FFF7FEFF 		bl	HAL_PWR_PVDCallback
 754              	.LVL28:
 493:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   }
 755              		.loc 1 493 0
 756 0012 024B     		ldr	r3, .L68
 757 0014 4FF48032 		mov	r2, #65536
 758 0018 5A61     		str	r2, [r3, #20]
 495:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 759              		.loc 1 495 0
 760 001a F7E7     		b	.L64
 761              	.L69:
 762              		.align	2
 763              	.L68:
 764 001c 003C0140 		.word	1073822720
 765              		.cfi_endproc
 766              	.LFE137:
 768              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 769              		.align	1
 770              		.global	HAL_PWR_EnableSleepOnExit
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu fpv4-sp-d16
 776              	HAL_PWR_EnableSleepOnExit:
 777              	.LFB139:
 507:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 508:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 509:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 510:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 511:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 512:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 513:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 514:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 515:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 516:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 517:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 778              		.loc 1 517 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 518:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 519:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 783              		.loc 1 519 0
 784 0000 024A     		ldr	r2, .L71
 785 0002 1369     		ldr	r3, [r2, #16]
 786 0004 43F00203 		orr	r3, r3, #2
 787 0008 1361     		str	r3, [r2, #16]
 520:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 788              		.loc 1 520 0
 789 000a 7047     		bx	lr
 790              	.L72:
 791              		.align	2
 792              	.L71:
 793 000c 00ED00E0 		.word	-536810240
 794              		.cfi_endproc
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 31


 795              	.LFE139:
 797              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 798              		.align	1
 799              		.global	HAL_PWR_DisableSleepOnExit
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv4-sp-d16
 805              	HAL_PWR_DisableSleepOnExit:
 806              	.LFB140:
 521:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 522:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 523:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 524:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 525:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 526:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 527:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 528:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 529:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 807              		.loc 1 529 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
 530:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 531:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 812              		.loc 1 531 0
 813 0000 024A     		ldr	r2, .L74
 814 0002 1369     		ldr	r3, [r2, #16]
 815 0004 23F00203 		bic	r3, r3, #2
 816 0008 1361     		str	r3, [r2, #16]
 532:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 817              		.loc 1 532 0
 818 000a 7047     		bx	lr
 819              	.L75:
 820              		.align	2
 821              	.L74:
 822 000c 00ED00E0 		.word	-536810240
 823              		.cfi_endproc
 824              	.LFE140:
 826              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 827              		.align	1
 828              		.global	HAL_PWR_EnableSEVOnPend
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv4-sp-d16
 834              	HAL_PWR_EnableSEVOnPend:
 835              	.LFB141:
 533:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 534:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 535:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 536:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 537:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 538:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 539:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 540:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 32


 541:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 836              		.loc 1 541 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 542:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 543:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 841              		.loc 1 543 0
 842 0000 024A     		ldr	r2, .L77
 843 0002 1369     		ldr	r3, [r2, #16]
 844 0004 43F01003 		orr	r3, r3, #16
 845 0008 1361     		str	r3, [r2, #16]
 544:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 846              		.loc 1 544 0
 847 000a 7047     		bx	lr
 848              	.L78:
 849              		.align	2
 850              	.L77:
 851 000c 00ED00E0 		.word	-536810240
 852              		.cfi_endproc
 853              	.LFE141:
 855              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 856              		.align	1
 857              		.global	HAL_PWR_DisableSEVOnPend
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv4-sp-d16
 863              	HAL_PWR_DisableSEVOnPend:
 864              	.LFB142:
 545:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** 
 546:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** /**
 547:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 548:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 549:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 550:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   * @retval None
 551:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   */
 552:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 553:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** {
 865              		.loc 1 553 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 554:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 555:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 870              		.loc 1 555 0
 871 0000 024A     		ldr	r2, .L80
 872 0002 1369     		ldr	r3, [r2, #16]
 873 0004 23F01003 		bic	r3, r3, #16
 874 0008 1361     		str	r3, [r2, #16]
 556:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src\stm32f4xx_hal_pwr.c **** }
 875              		.loc 1 556 0
 876 000a 7047     		bx	lr
 877              	.L81:
 878              		.align	2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 33


 879              	.L80:
 880 000c 00ED00E0 		.word	-536810240
 881              		.cfi_endproc
 882              	.LFE142:
 884              		.section	.rodata.HAL_PWR_ConfigPVD.str1.4,"aMS",%progbits,1
 885              		.align	2
 886              	.LC0:
 887 0000 433A2F55 		.ascii	"C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4"
 887      73657273 
 887      2F303733 
 887      62652F53 
 887      544D3332 
 888 0033 5F56312E 		.ascii	"_V1.23.0/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx"
 888      32332E30 
 888      2F447269 
 888      76657273 
 888      2F53544D 
 889 0066 5F68616C 		.ascii	"_hal_pwr.c\000"
 889      5F707772 
 889      2E6300
 890              		.text
 891              	.Letext0:
 892              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 893              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 894              		.file 5 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core_cm
 895              		.file 6 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 896              		.file 7 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 897              		.file 8 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 898              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 899              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 900              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 901              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 902              		.file 13 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver
 903              		.file 14 "Core/Inc/stm32f4xx_hal_conf.h"
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccidRrOM.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_pwr.c
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:18     .text.HAL_PWR_DeInit:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:25     .text.HAL_PWR_DeInit:00000000 HAL_PWR_DeInit
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:47     .text.HAL_PWR_DeInit:00000014 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:52     .text.HAL_PWR_EnableBkUpAccess:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:59     .text.HAL_PWR_EnableBkUpAccess:00000000 HAL_PWR_EnableBkUpAccess
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:75     .text.HAL_PWR_EnableBkUpAccess:00000008 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:80     .text.HAL_PWR_DisableBkUpAccess:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:87     .text.HAL_PWR_DisableBkUpAccess:00000000 HAL_PWR_DisableBkUpAccess
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:103    .text.HAL_PWR_DisableBkUpAccess:00000008 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:108    .text.HAL_PWR_ConfigPVD:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:115    .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:259    .text.HAL_PWR_ConfigPVD:000000d8 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:267    .text.HAL_PWR_EnablePVD:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:274    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:290    .text.HAL_PWR_EnablePVD:00000008 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:295    .text.HAL_PWR_DisablePVD:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:302    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:318    .text.HAL_PWR_DisablePVD:00000008 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:323    .text.HAL_PWR_EnableWakeUpPin:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:330    .text.HAL_PWR_EnableWakeUpPin:00000000 HAL_PWR_EnableWakeUpPin
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:364    .text.HAL_PWR_EnableWakeUpPin:00000020 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:370    .text.HAL_PWR_DisableWakeUpPin:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:377    .text.HAL_PWR_DisableWakeUpPin:00000000 HAL_PWR_DisableWakeUpPin
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:411    .text.HAL_PWR_DisableWakeUpPin:00000020 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:417    .text.HAL_PWR_EnterSLEEPMode:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:424    .text.HAL_PWR_EnterSLEEPMode:00000000 HAL_PWR_EnterSLEEPMode
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:523    .text.HAL_PWR_EnterSLEEPMode:00000044 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:531    .text.HAL_PWR_EnterSTOPMode:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:538    .text.HAL_PWR_EnterSTOPMode:00000000 HAL_PWR_EnterSTOPMode
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:650    .text.HAL_PWR_EnterSTOPMode:0000005c $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:659    .text.HAL_PWR_EnterSTANDBYMode:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:666    .text.HAL_PWR_EnterSTANDBYMode:00000000 HAL_PWR_EnterSTANDBYMode
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:699    .text.HAL_PWR_EnterSTANDBYMode:00000018 $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:705    .text.HAL_PWR_PVDCallback:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:712    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:725    .text.HAL_PWR_PVD_IRQHandler:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:732    .text.HAL_PWR_PVD_IRQHandler:00000000 HAL_PWR_PVD_IRQHandler
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:764    .text.HAL_PWR_PVD_IRQHandler:0000001c $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:769    .text.HAL_PWR_EnableSleepOnExit:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:776    .text.HAL_PWR_EnableSleepOnExit:00000000 HAL_PWR_EnableSleepOnExit
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:793    .text.HAL_PWR_EnableSleepOnExit:0000000c $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:798    .text.HAL_PWR_DisableSleepOnExit:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:805    .text.HAL_PWR_DisableSleepOnExit:00000000 HAL_PWR_DisableSleepOnExit
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:822    .text.HAL_PWR_DisableSleepOnExit:0000000c $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:827    .text.HAL_PWR_EnableSEVOnPend:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:834    .text.HAL_PWR_EnableSEVOnPend:00000000 HAL_PWR_EnableSEVOnPend
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:851    .text.HAL_PWR_EnableSEVOnPend:0000000c $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:856    .text.HAL_PWR_DisableSEVOnPend:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:863    .text.HAL_PWR_DisableSEVOnPend:00000000 HAL_PWR_DisableSEVOnPend
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:880    .text.HAL_PWR_DisableSEVOnPend:0000000c $d
C:\Users\073be\AppData\Local\Temp\ccidRrOM.s:885    .rodata.HAL_PWR_ConfigPVD.str1.4:00000000 $d

UNDEFINED SYMBOLS
assert_failed
