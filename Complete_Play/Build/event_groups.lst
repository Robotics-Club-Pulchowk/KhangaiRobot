ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"event_groups.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTestWaitCondition,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvTestWaitCondition:
  25              	.LFB14:
  26              		.file 1 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeR
   1:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*
   2:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     All rights reserved
   4:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
   5:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
   7:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     This file is part of the FreeRTOS distribution.
   8:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
   9:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  13:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     ***************************************************************************
  14:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     ***************************************************************************
  19:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  20:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     link: http://www.freertos.org/a00114.html
  24:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  25:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     ***************************************************************************
  26:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *                                                                       *
  27:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    platform software that is more than just the market leader, it     *
  30:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    is the industry's de facto standard.                               *
  31:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *                                                                       *
  32:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 2


  33:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    tutorial book, reference manual, or both:                          *
  35:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****      *                                                                       *
  37:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     ***************************************************************************
  38:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  39:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     defined configASSERT()?
  42:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  43:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     embedded software for free we request you assist our global community by
  45:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     participating in the support forum.
  46:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  47:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     be as productive as possible as early as possible.  Now you can receive
  49:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  52:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  56:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  59:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  63:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     engineered and independently SIL3 certified version for use in safety and
  65:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     mission critical applications that require provable dependability.
  66:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  67:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****     1 tab == 4 spaces!
  68:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** */
  69:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  70:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /* Standard includes. */
  71:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #include <stdlib.h>
  72:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  73:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** task.h is included from an application file. */
  76:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  78:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /* FreeRTOS includes. */
  79:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #include "FreeRTOS.h"
  80:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #include "task.h"
  81:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #include "timers.h"
  82:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #include "event_groups.h"
  83:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  84:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  85:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  86:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** header files above, but not in this file, in order to generate the correct
  87:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** privileged Vs unprivileged linkage and placement. */
  88:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  89:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 3


  90:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /* The following bit fields convey control information in a task's event list
  91:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** item value.  It is important they don't clash with the
  92:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  93:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  94:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  95:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  96:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  97:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  98:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #else
  99:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
 100:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
 101:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
 102:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
 103:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #endif
 104:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 105:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** typedef struct xEventGroupDefinition
 106:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 107:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	EventBits_t uxEventBits;
 108:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
 109:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 110:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 111:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		UBaseType_t uxEventGroupNumber;
 112:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#endif
 113:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 114:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 115:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
 116:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#endif
 117:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** } EventGroup_t;
 118:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 119:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 120:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 121:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*
 122:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
 123:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
 124:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
 125:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
 126:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
 127:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****  * in uxCurrentEventBits.
 128:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c ****  */
 129:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** PRIVILEGED_FUNCTION static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, c
 130:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 131:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 132:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 133:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 134:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 135:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
 136:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 137:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	EventGroup_t *pxEventBits;
 138:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 139:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
 140:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		configASSERT( pxEventGroupBuffer );
 141:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 142:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 143:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 EventGroup_t and StaticEventGro
 144:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 145:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( pxEventBits != NULL )
 146:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 4


 147:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			pxEventBits->uxEventBits = 0;
 148:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 149:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 150:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 151:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 152:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 153:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				this event group was created statically in case the event group
 154:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				is later deleted. */
 155:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 156:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 157:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 158:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 159:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 160:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 161:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 162:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 163:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 164:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 165:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 166:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 167:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 168:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 169:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 170:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 171:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 172:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 173:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 174:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 175:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 176:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	EventGroup_t *pxEventBits;
 177:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 178:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Allocate the event group. */
 179:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) );
 180:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 181:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( pxEventBits != NULL )
 182:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 183:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			pxEventBits->uxEventBits = 0;
 184:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 185:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 186:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 187:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 188:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 189:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				event group was allocated statically in case the event group is
 190:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				later deleted. */
 191:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 192:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 193:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 194:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 195:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 196:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 197:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 198:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 199:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 200:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 201:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 202:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 203:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 5


 204:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 205:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 206:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 207:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 208:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 209:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 210:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 211:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 212:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xAlreadyYielded;
 213:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 214:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 215:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 216:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 217:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 218:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 219:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 220:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 221:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#endif
 222:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 223:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	vTaskSuspendAll();
 224:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 225:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 226:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 227:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 228:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 229:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 230:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 231:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 232:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 233:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 234:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 235:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			already unless this is the only task in the rendezvous. */
 236:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 238:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xTicksToWait = 0;
 239:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 240:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 241:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 242:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 243:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 244:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 245:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 246:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 247:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				task's event list item so the kernel knows when a match is
 248:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				found.  Then enter the blocked state. */
 249:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 250:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 251:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 252:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 253:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				warning about uxReturn being returned without being set if the
 254:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				assignment is omitted. */
 255:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				uxReturn = 0;
 256:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 257:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			else
 258:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 259:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 260:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				specified - just return the current event bit value. */
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 6


 261:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 262:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 263:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 264:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 265:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 266:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 267:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 268:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 269:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 270:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 271:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			portYIELD_WITHIN_API();
 272:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 273:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 274:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 275:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 276:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 277:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 278:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 279:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		point either the required bits were set or the block time expired.  If
 280:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		the required bits were set they will have been stored in the task's
 281:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 282:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 283:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 284:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 285:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 286:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 287:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			taskENTER_CRITICAL();
 288:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 289:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 290:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 291:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* Although the task got here because it timed out before the
 292:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 293:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 294:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				then it needs to clear the bits before exiting. */
 295:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 296:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 297:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 298:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 299:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				else
 300:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 301:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 302:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 303:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 304:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			taskEXIT_CRITICAL();
 305:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 306:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 307:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 308:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 309:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 310:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The task unblocked because the bits were set. */
 311:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 312:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 313:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 314:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		returned. */
 315:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 316:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 317:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 7


 318:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 319:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 320:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	return uxReturn;
 321:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 322:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 323:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 324:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 325:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 326:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 327:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 328:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 329:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 330:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 331:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 332:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	itself, and that at least one bit is being requested. */
 333:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( xEventGroup );
 334:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 335:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 336:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 337:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 338:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 339:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 340:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#endif
 341:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 342:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	vTaskSuspendAll();
 343:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 344:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 345:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 346:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 347:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 348:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 349:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 350:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 351:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The wait condition has already been met so there is no need to
 352:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			block. */
 353:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxReturn = uxCurrentEventBits;
 354:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 355:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 356:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 357:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			if( xClearOnExit != pdFALSE )
 358:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 359:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 360:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 361:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			else
 362:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 363:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 364:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 365:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 366:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 367:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 368:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The wait condition has not been met, but no block time was
 369:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			specified, so just return the current value. */
 370:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxReturn = uxCurrentEventBits;
 371:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 372:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 373:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 374:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The task is going to block to wait for its required bits to be
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 8


 375:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 376:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 377:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			unblock the task. */
 378:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			if( xClearOnExit != pdFALSE )
 379:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 380:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 381:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 382:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			else
 383:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 384:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 385:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 386:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 387:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 388:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 389:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 390:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 391:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			else
 392:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 393:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 394:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 395:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 396:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 397:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			task's event list item so the kernel knows when a match is
 398:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			found.  Then enter the blocked state. */
 399:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 400:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 401:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 402:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 403:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			being returned without being set if it is not done. */
 404:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxReturn = 0;
 405:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 406:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 407:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 408:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 409:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 410:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 411:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 412:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 413:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 414:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 415:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			portYIELD_WITHIN_API();
 416:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 417:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 418:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 419:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 420:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 421:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 422:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 423:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		point either the required bits were set or the block time expired.  If
 424:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		the required bits were set they will have been stored in the task's
 425:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 426:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 427:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 428:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 429:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 430:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			taskENTER_CRITICAL();
 431:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 9


 432:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 433:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 434:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 435:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* It is possible that the event bits were updated between this
 436:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				task leaving the Blocked state and running again. */
 437:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 438:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 439:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					if( xClearOnExit != pdFALSE )
 440:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					{
 441:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 442:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					}
 443:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					else
 444:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					{
 445:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 446:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					}
 447:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 448:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				else
 449:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 450:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 451:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 452:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 453:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			taskEXIT_CRITICAL();
 454:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 455:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* Prevent compiler warnings when trace macros are not used. */
 456:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xTimeoutOccurred = pdFALSE;
 457:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 458:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 459:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 460:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The task unblocked because the bits were set. */
 461:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 462:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 463:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* The task blocked so control bits may have been set. */
 464:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 465:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 466:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 467:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 468:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	return uxReturn;
 469:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 470:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 471:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 472:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 473:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 474:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 475:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t uxReturn;
 476:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 477:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 478:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	itself. */
 479:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( xEventGroup );
 480:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 481:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 482:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	taskENTER_CRITICAL();
 483:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 484:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 485:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 486:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 487:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		cleared. */
 488:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 10


 489:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 490:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Clear the bits. */
 491:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 492:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 493:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	taskEXIT_CRITICAL();
 494:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 495:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	return uxReturn;
 496:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 497:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 498:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 499:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 500:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 501:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 502:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 503:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		BaseType_t xReturn;
 504:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 505:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 506:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 507:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 508:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		return xReturn;
 509:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 510:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 511:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** #endif
 512:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 513:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 514:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 515:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 516:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 517:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 518:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t uxReturn;
 519:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 520:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 521:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 522:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 523:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 524:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 525:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 526:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	return uxReturn;
 527:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 528:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 529:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 530:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 531:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 532:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** ListItem_t *pxListItem, *pxNext;
 533:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** ListItem_t const *pxListEnd;
 534:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** List_t *pxList;
 535:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 536:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 537:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 538:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 539:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 540:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	itself. */
 541:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( xEventGroup );
 542:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 543:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 544:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 545:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as th
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 11


 546:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	vTaskSuspendAll();
 547:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 548:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 549:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 550:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 551:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 552:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Set the bits. */
 553:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 554:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 555:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 556:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		while( pxListItem != pxListEnd )
 557:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 558:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 559:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 560:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xMatchFound = pdFALSE;
 561:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 562:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* Split the bits waited for from the control bits. */
 563:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 564:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 565:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 566:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 567:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 568:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* Just looking for single bit being set. */
 569:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 570:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 571:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					xMatchFound = pdTRUE;
 572:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 573:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				else
 574:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 575:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 576:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 577:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 578:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 579:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 580:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* All bits are set. */
 581:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				xMatchFound = pdTRUE;
 582:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 583:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			else
 584:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 585:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 586:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 587:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 588:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			if( xMatchFound != pdFALSE )
 589:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 590:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 591:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 592:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 593:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 594:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 595:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				else
 596:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 597:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 598:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 599:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 600:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				/* Store the actual event flag value in the task's event list
 601:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				item before removing the task from the event list.  The
 602:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 12


 603:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 604:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				than because it timed out. */
 605:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				( void ) xTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCK
 606:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 607:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 608:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 609:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			used here as the list item may have been removed from the event list
 610:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			and inserted into the ready/pending reading list. */
 611:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			pxListItem = pxNext;
 612:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 613:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 614:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 615:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		bit was set in the control word. */
 616:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 617:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 618:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	( void ) xTaskResumeAll();
 619:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 620:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	return pxEventBits->uxEventBits;
 621:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 622:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 623:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 624:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 625:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 626:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 627:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 628:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 629:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	vTaskSuspendAll();
 630:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 631:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 632:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 633:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 634:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 635:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 636:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			and	cannot therefore have any bits set. */
 637:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( ListItem_t * ) &( pxTasksWaitingForBit
 638:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			( void ) xTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 639:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 640:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 641:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 642:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 643:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 644:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			it again. */
 645:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			vPortFree( pxEventBits );
 646:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 647:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 648:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 649:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			/* The event group could have been allocated statically or
 650:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 651:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 652:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 653:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				vPortFree( pxEventBits );
 654:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 655:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			else
 656:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 657:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 658:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 659:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 13


 660:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 661:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 662:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	( void ) xTaskResumeAll();
 663:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 664:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 665:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 666:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 667:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** an interrupt. */
 668:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 669:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 670:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 671:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 672:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 673:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 674:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 675:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** an interrupt. */
 676:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 677:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
 678:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 679:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 680:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 681:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 682:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 683:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** {
  27              		.loc 1 683 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 684:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 685:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 686:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
  33              		.loc 1 686 0
  34 0000 1AB9     		cbnz	r2, .L2
 687:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 688:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 689:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		set.  Is one already set? */
 690:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
  35              		.loc 1 690 0
  36 0002 0842     		tst	r0, r1
  37 0004 06D1     		bne	.L4
 684:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
  38              		.loc 1 684 0
  39 0006 0020     		movs	r0, #0
  40              	.LVL1:
  41 0008 7047     		bx	lr
  42              	.LVL2:
  43              	.L2:
 691:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 692:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xWaitConditionMet = pdTRUE;
 693:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 694:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 695:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 696:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 697:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 698:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 14


 699:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	else
 700:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 701:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 702:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		Are they set already? */
 703:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
  44              		.loc 1 703 0
  45 000a 31EA0003 		bics	r3, r1, r0
  46 000e 03D0     		beq	.L5
 684:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  47              		.loc 1 684 0
  48 0010 0020     		movs	r0, #0
  49              	.LVL3:
  50 0012 7047     		bx	lr
  51              	.LVL4:
  52              	.L4:
 692:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
  53              		.loc 1 692 0
  54 0014 0120     		movs	r0, #1
  55              	.LVL5:
  56 0016 7047     		bx	lr
  57              	.LVL6:
  58              	.L5:
 704:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 705:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xWaitConditionMet = pdTRUE;
  59              		.loc 1 705 0
  60 0018 0120     		movs	r0, #1
  61              	.LVL7:
 706:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 707:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		else
 708:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 709:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 710:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 711:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 712:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 713:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	return xWaitConditionMet;
 714:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
  62              		.loc 1 714 0
  63 001a 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE14:
  67              		.section	.text.xEventGroupCreateStatic,"ax",%progbits
  68              		.align	1
  69              		.global	xEventGroupCreateStatic
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	xEventGroupCreateStatic:
  76              	.LFB5:
 136:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	EventGroup_t *pxEventBits;
  77              		.loc 1 136 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL8:
 140:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
  82              		.loc 1 140 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 15


  83 0000 40B9     		cbnz	r0, .L7
  84              	.LBB33:
  85              	.LBB34:
  86              		.file 2 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeR
   1:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*
   2:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     All rights reserved
   4:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   5:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   7:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   9:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  13:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  14:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  19:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  20:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  25:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  26:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  27:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    is the industry's de facto standard.                               *
  31:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  32:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  37:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  38:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  39:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     defined configASSERT()?
  42:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  43:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     embedded software for free we request you assist our global community by
  45:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     participating in the support forum.
  46:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  47:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  52:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 16


  54:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  56:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  59:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  63:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     mission critical applications that require provable dependability.
  66:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  67:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     1 tab == 4 spaces!
  68:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** */
  69:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  70:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  71:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef PORTMACRO_H
  72:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define PORTMACRO_H
  73:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  74:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef __cplusplus
  75:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern "C" {
  76:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
  77:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  78:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------
  79:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * Port specific definitions.
  80:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  81:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * given hardware and compiler.
  83:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  84:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * These settings should not be altered.
  85:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *-----------------------------------------------------------
  86:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  */
  87:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  88:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Type definitions. */
  89:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCHAR		char
  90:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portFLOAT		float
  91:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDOUBLE		double
  92:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portLONG		long
  93:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSHORT		short
  94:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBASE_TYPE	long
  96:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  97:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef long BaseType_t;
  99:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef unsigned long UBaseType_t;
 100:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 101:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint16_t TickType_t;
 103:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #else
 105:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint32_t TickType_t;
 106:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 108:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	not need to be guarded with a critical section. */
 110:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 17


 111:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 112:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 113:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 114:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specifics. */
 115:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 119:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 120:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Scheduler utilities. */
 121:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD() 															\
 122:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {																				\
 123:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 																				\
 126:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "dsb" );													\
 129:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "isb" );													\
 130:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 131:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 132:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 137:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 138:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Critical section management. */
 139:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortEnterCritical( void );
 140:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortExitCritical( void );
 141:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 148:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 149:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 150:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** (which build with all the ports) will build. */
 153:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 157:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Tickless idle/low power functionality. */
 158:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 162:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 163:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 164:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specific optimisations. */
 165:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 18


 168:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 169:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 171:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Generic helper function. */
 172:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	{
 174:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	uint8_t ucReturn;
 175:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 176:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		return ucReturn;
 178:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	}
 179:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 180:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Check the configuration. */
 181:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#endif
 184:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 185:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 189:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/*-----------------------------------------------------------*/
 190:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 191:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 193:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 195:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 196:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 197:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef configASSERT
 198:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 201:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 202:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* portNOP() is not required by this port. */
 203:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNOP()
 204:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 205:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portINLINE	__inline
 206:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 207:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portFORCE_INLINE
 208:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 210:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 211:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 213:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulCurrentInterrupt;
 214:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** BaseType_t xReturn;
 215:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 216:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 219:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	{
 221:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		xReturn = pdFALSE;
 222:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	}
 223:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	else
 224:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	{
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 19


 225:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		xReturn = pdTRUE;
 226:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	}
 227:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 228:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	return xReturn;
 229:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 230:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 231:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 232:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 233:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 235:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulNewBASEPRI;
 236:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
  87              		.loc 2 237 0
  88              		.syntax unified
  89              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
  90 0002 4FF05003 			mov r3, #80												
  91 0006 83F31188 		msr basepri, r3											
  92 000a BFF36F8F 		isb														
  93 000e BFF34F8F 		dsb														
  94              	
  95              	@ 0 "" 2
  96              	.LVL9:
  97              		.thumb
  98              		.syntax unified
  99              	.L8:
 100 0012 FEE7     		b	.L8
 101              	.L7:
 102              	.LBE34:
 103              	.LBE33:
 136:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	EventGroup_t *pxEventBits;
 104              		.loc 1 136 0
 105 0014 10B5     		push	{r4, lr}
 106              	.LCFI0:
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 4, -8
 109              		.cfi_offset 14, -4
 110 0016 0446     		mov	r4, r0
 111              	.LVL10:
 147:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 112              		.loc 1 147 0
 113 0018 0023     		movs	r3, #0
 114 001a 40F8043B 		str	r3, [r0], #4
 115              	.LVL11:
 148:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 116              		.loc 1 148 0
 117 001e FFF7FEFF 		bl	vListInitialise
 118              	.LVL12:
 167:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 119              		.loc 1 167 0
 120 0022 2046     		mov	r0, r4
 121 0024 10BD     		pop	{r4, pc}
 122              		.cfi_endproc
 123              	.LFE5:
 125              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 126              		.align	1
 127              		.global	xEventGroupWaitBits
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 20


 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	xEventGroupWaitBits:
 134              	.LFB7:
 325:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 135              		.loc 1 325 0
 136              		.cfi_startproc
 137              		@ args = 4, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              	.LVL13:
 140 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 32
 143              		.cfi_offset 4, -32
 144              		.cfi_offset 5, -28
 145              		.cfi_offset 6, -24
 146              		.cfi_offset 7, -20
 147              		.cfi_offset 8, -16
 148              		.cfi_offset 9, -12
 149              		.cfi_offset 10, -8
 150              		.cfi_offset 14, -4
 151 0004 DDF82090 		ldr	r9, [sp, #32]
 152              	.LVL14:
 333:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 153              		.loc 1 333 0
 154 0008 60B1     		cbz	r0, .L31
 155 000a 0646     		mov	r6, r0
 334:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 156              		.loc 1 334 0
 157 000c 11F07F4A 		ands	r10, r1, #-16777216
 158 0010 11D0     		beq	.L14
 159              	.LBB35:
 160              	.LBB36:
 161              		.loc 2 237 0
 162              		.syntax unified
 163              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 164 0012 4FF05003 			mov r3, #80												
 165 0016 83F31188 		msr basepri, r3											
 166 001a BFF36F8F 		isb														
 167 001e BFF34F8F 		dsb														
 168              	
 169              	@ 0 "" 2
 170              	.LVL15:
 171              		.thumb
 172              		.syntax unified
 173              	.L15:
 174 0022 FEE7     		b	.L15
 175              	.LVL16:
 176              	.L31:
 177              	.LBE36:
 178              	.LBE35:
 179              	.LBB37:
 180              	.LBB38:
 181              		.syntax unified
 182              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 21


 183 0024 4FF05003 			mov r3, #80												
 184 0028 83F31188 		msr basepri, r3											
 185 002c BFF36F8F 		isb														
 186 0030 BFF34F8F 		dsb														
 187              	
 188              	@ 0 "" 2
 189              	.LVL17:
 190              		.thumb
 191              		.syntax unified
 192              	.L13:
 193 0034 FEE7     		b	.L13
 194              	.LVL18:
 195              	.L14:
 196              	.LBE38:
 197              	.LBE37:
 335:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 198              		.loc 1 335 0
 199 0036 41B9     		cbnz	r1, .L16
 200              	.LBB39:
 201              	.LBB40:
 202              		.loc 2 237 0
 203              		.syntax unified
 204              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 205 0038 4FF05003 			mov r3, #80												
 206 003c 83F31188 		msr basepri, r3											
 207 0040 BFF36F8F 		isb														
 208 0044 BFF34F8F 		dsb														
 209              	
 210              	@ 0 "" 2
 211              	.LVL19:
 212              		.thumb
 213              		.syntax unified
 214              	.L17:
 215 0048 FEE7     		b	.L17
 216              	.LVL20:
 217              	.L16:
 218 004a 9846     		mov	r8, r3
 219 004c 1746     		mov	r7, r2
 220 004e 0C46     		mov	r4, r1
 221              	.LBE40:
 222              	.LBE39:
 338:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 223              		.loc 1 338 0
 224 0050 FFF7FEFF 		bl	xTaskGetSchedulerState
 225              	.LVL21:
 226 0054 58B9     		cbnz	r0, .L18
 338:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 227              		.loc 1 338 0 is_stmt 0 discriminator 2
 228 0056 B9F1000F 		cmp	r9, #0
 229 005a 08D0     		beq	.L18
 230              	.LBB41:
 231              	.LBB42:
 232              		.loc 2 237 0 is_stmt 1
 233              		.syntax unified
 234              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 235 005c 4FF05003 			mov r3, #80												
 236 0060 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 22


 237 0064 BFF36F8F 		isb														
 238 0068 BFF34F8F 		dsb														
 239              	
 240              	@ 0 "" 2
 241              	.LVL22:
 242              		.thumb
 243              		.syntax unified
 244              	.L19:
 245 006c FEE7     		b	.L19
 246              	.L18:
 247              	.LBE42:
 248              	.LBE41:
 342:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 249              		.loc 1 342 0
 250 006e FFF7FEFF 		bl	vTaskSuspendAll
 251              	.LVL23:
 252              	.LBB43:
 344:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 253              		.loc 1 344 0
 254 0072 3568     		ldr	r5, [r6]
 255              	.LVL24:
 347:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 256              		.loc 1 347 0
 257 0074 4246     		mov	r2, r8
 258 0076 2146     		mov	r1, r4
 259 0078 2846     		mov	r0, r5
 260 007a FFF7FEFF 		bl	prvTestWaitCondition
 261              	.LVL25:
 349:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 262              		.loc 1 349 0
 263 007e 58B3     		cbz	r0, .L20
 264              	.LVL26:
 357:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 265              		.loc 1 357 0
 266 0080 17B1     		cbz	r7, .L21
 359:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 267              		.loc 1 359 0
 268 0082 25EA0403 		bic	r3, r5, r4
 269 0086 3360     		str	r3, [r6]
 270              	.LVL27:
 271              	.L21:
 272              	.LBE43:
 409:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 273              		.loc 1 409 0
 274 0088 FFF7FEFF 		bl	xTaskResumeAll
 275              	.LVL28:
 411:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 276              		.loc 1 411 0
 277 008c BAF1000F 		cmp	r10, #0
 278 0090 1FD0     		beq	.L11
 413:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 279              		.loc 1 413 0
 280 0092 38B9     		cbnz	r0, .L25
 415:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 281              		.loc 1 415 0
 282 0094 1C4B     		ldr	r3, .L32
 283 0096 4FF08052 		mov	r2, #268435456
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 23


 284 009a 1A60     		str	r2, [r3]
 285              		.syntax unified
 286              	@ 415 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 287 009c BFF34F8F 		dsb
 288              	@ 0 "" 2
 289              	@ 415 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 290 00a0 BFF36F8F 		isb
 291              	@ 0 "" 2
 292              		.thumb
 293              		.syntax unified
 294              	.L25:
 426:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 295              		.loc 1 426 0
 296 00a4 FFF7FEFF 		bl	uxTaskResetEventItemValue
 297              	.LVL29:
 298 00a8 0546     		mov	r5, r0
 299              	.LVL30:
 428:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 300              		.loc 1 428 0
 301 00aa 10F0007F 		tst	r0, #33554432
 302 00ae 0ED1     		bne	.L26
 430:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 303              		.loc 1 430 0
 304 00b0 FFF7FEFF 		bl	vPortEnterCritical
 305              	.LVL31:
 433:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 306              		.loc 1 433 0
 307 00b4 3568     		ldr	r5, [r6]
 308              	.LVL32:
 437:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 309              		.loc 1 437 0
 310 00b6 4246     		mov	r2, r8
 311 00b8 2146     		mov	r1, r4
 312 00ba 2846     		mov	r0, r5
 313 00bc FFF7FEFF 		bl	prvTestWaitCondition
 314              	.LVL33:
 315 00c0 18B1     		cbz	r0, .L27
 439:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					{
 316              		.loc 1 439 0
 317 00c2 17B1     		cbz	r7, .L27
 441:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 					}
 318              		.loc 1 441 0
 319 00c4 25EA0404 		bic	r4, r5, r4
 320              	.LVL34:
 321 00c8 3460     		str	r4, [r6]
 322              	.L27:
 453:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 323              		.loc 1 453 0
 324 00ca FFF7FEFF 		bl	vPortExitCritical
 325              	.LVL35:
 326              	.L26:
 464:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 327              		.loc 1 464 0
 328 00ce 25F07F45 		bic	r5, r5, #-16777216
 329              	.LVL36:
 330              	.L11:
 469:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 24


 331              		.loc 1 469 0
 332 00d2 2846     		mov	r0, r5
 333 00d4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 334              	.LVL37:
 335              	.L20:
 336              	.LBB44:
 366:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 337              		.loc 1 366 0
 338 00d8 B9F1000F 		cmp	r9, #0
 339 00dc 11D0     		beq	.L28
 378:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 340              		.loc 1 378 0
 341 00de 6FB9     		cbnz	r7, .L29
 342              	.LBE44:
 327:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 343              		.loc 1 327 0
 344 00e0 0021     		movs	r1, #0
 345              	.L22:
 346              	.LVL38:
 347              	.LBB45:
 387:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 348              		.loc 1 387 0
 349 00e2 B8F1000F 		cmp	r8, #0
 350 00e6 01D0     		beq	.L23
 389:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 351              		.loc 1 389 0
 352 00e8 41F08061 		orr	r1, r1, #67108864
 353              	.LVL39:
 354              	.L23:
 399:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 355              		.loc 1 399 0
 356 00ec 4A46     		mov	r2, r9
 357 00ee 2143     		orrs	r1, r1, r4
 358              	.LVL40:
 359 00f0 301D     		adds	r0, r6, #4
 360              	.LVL41:
 361 00f2 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 362              	.LVL42:
 363 00f6 CA46     		mov	r10, r9
 404:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 364              		.loc 1 404 0
 365 00f8 0025     		movs	r5, #0
 366              	.LVL43:
 367 00fa C5E7     		b	.L21
 368              	.LVL44:
 369              	.L29:
 380:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 370              		.loc 1 380 0
 371 00fc 4FF08071 		mov	r1, #16777216
 372 0100 EFE7     		b	.L22
 373              	.L28:
 374 0102 CA46     		mov	r10, r9
 375 0104 C0E7     		b	.L21
 376              	.L33:
 377 0106 00BF     		.align	2
 378              	.L32:
 379 0108 04ED00E0 		.word	-536810236
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 25


 380              	.LBE45:
 381              		.cfi_endproc
 382              	.LFE7:
 384              		.section	.text.xEventGroupClearBits,"ax",%progbits
 385              		.align	1
 386              		.global	xEventGroupClearBits
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv4-sp-d16
 392              	xEventGroupClearBits:
 393              	.LFB8:
 473:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 394              		.loc 1 473 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              	.LVL45:
 479:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 399              		.loc 1 479 0
 400 0000 40B9     		cbnz	r0, .L35
 401              	.LBB46:
 402              	.LBB47:
 403              		.loc 2 237 0
 404              		.syntax unified
 405              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 406 0002 4FF05003 			mov r3, #80												
 407 0006 83F31188 		msr basepri, r3											
 408 000a BFF36F8F 		isb														
 409 000e BFF34F8F 		dsb														
 410              	
 411              	@ 0 "" 2
 412              	.LVL46:
 413              		.thumb
 414              		.syntax unified
 415              	.L36:
 416 0012 FEE7     		b	.L36
 417              	.L35:
 418              	.LBE47:
 419              	.LBE46:
 473:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 420              		.loc 1 473 0
 421 0014 70B5     		push	{r4, r5, r6, lr}
 422              	.LCFI2:
 423              		.cfi_def_cfa_offset 16
 424              		.cfi_offset 4, -16
 425              		.cfi_offset 5, -12
 426              		.cfi_offset 6, -8
 427              		.cfi_offset 14, -4
 428 0016 0546     		mov	r5, r0
 480:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 429              		.loc 1 480 0
 430 0018 11F07F4F 		tst	r1, #-16777216
 431 001c 08D0     		beq	.L37
 432              	.LBB48:
 433              	.LBB49:
 434              		.loc 2 237 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 26


 435              		.syntax unified
 436              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 437 001e 4FF05003 			mov r3, #80												
 438 0022 83F31188 		msr basepri, r3											
 439 0026 BFF36F8F 		isb														
 440 002a BFF34F8F 		dsb														
 441              	
 442              	@ 0 "" 2
 443              	.LVL47:
 444              		.thumb
 445              		.syntax unified
 446              	.L38:
 447 002e FEE7     		b	.L38
 448              	.L37:
 449 0030 0C46     		mov	r4, r1
 450              	.LBE49:
 451              	.LBE48:
 482:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 452              		.loc 1 482 0
 453 0032 FFF7FEFF 		bl	vPortEnterCritical
 454              	.LVL48:
 488:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 455              		.loc 1 488 0
 456 0036 2E68     		ldr	r6, [r5]
 457              	.LVL49:
 491:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 458              		.loc 1 491 0
 459 0038 26EA0404 		bic	r4, r6, r4
 460              	.LVL50:
 461 003c 2C60     		str	r4, [r5]
 493:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 462              		.loc 1 493 0
 463 003e FFF7FEFF 		bl	vPortExitCritical
 464              	.LVL51:
 496:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 465              		.loc 1 496 0
 466 0042 3046     		mov	r0, r6
 467 0044 70BD     		pop	{r4, r5, r6, pc}
 468              		.cfi_endproc
 469              	.LFE8:
 471              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 472              		.align	1
 473              		.global	xEventGroupGetBitsFromISR
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv4-sp-d16
 479              	xEventGroupGetBitsFromISR:
 480              	.LFB9:
 515:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 481              		.loc 1 515 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL52:
 487              	.LBB50:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 27


 488              	.LBB51:
 238:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 239:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %0, %1												\n"	\
 240:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0											\n" \
 241:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 242:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 243:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 244:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 245:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 246:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 247:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 248:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 249:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 250:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 251:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 252:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 253:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 489              		.loc 2 253 0
 490              		.syntax unified
 491              	@ 253 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 492 0000 EFF31183 			mrs r3, basepri											
 493 0004 4FF05002 		mov r2, #80												
 494 0008 82F31188 		msr basepri, r2											
 495 000c BFF36F8F 		isb														
 496 0010 BFF34F8F 		dsb														
 497              	
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501              	.LBE51:
 502              	.LBE50:
 522:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 503              		.loc 1 522 0
 504 0014 0068     		ldr	r0, [r0]
 505              	.LVL53:
 506              	.LBB52:
 507              	.LBB53:
 254:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 255:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mrs %0, basepri											\n" \
 256:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %1, %2												\n"	\
 257:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %1											\n" \
 258:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 259:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 260:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 261:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 262:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 263:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 264:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	warnings. */
 265:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	return ulOriginalBASEPRI;
 266:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 267:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 268:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 269:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 270:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 271:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 508              		.loc 2 271 0
 509              		.syntax unified
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 28


 510              	@ 271 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 511 0016 83F31188 			msr basepri, r3	
 512              	@ 0 "" 2
 513              		.thumb
 514              		.syntax unified
 515              	.LBE53:
 516              	.LBE52:
 527:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 517              		.loc 1 527 0
 518 001a 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE9:
 522              		.section	.text.xEventGroupSetBits,"ax",%progbits
 523              		.align	1
 524              		.global	xEventGroupSetBits
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu fpv4-sp-d16
 530              	xEventGroupSetBits:
 531              	.LFB10:
 531:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** ListItem_t *pxListItem, *pxNext;
 532              		.loc 1 531 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              	.LVL54:
 537 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 538              	.LCFI3:
 539              		.cfi_def_cfa_offset 24
 540              		.cfi_offset 3, -24
 541              		.cfi_offset 4, -20
 542              		.cfi_offset 5, -16
 543              		.cfi_offset 6, -12
 544              		.cfi_offset 7, -8
 545              		.cfi_offset 14, -4
 546              	.LVL55:
 541:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 547              		.loc 1 541 0
 548 0002 40B9     		cbnz	r0, .L43
 549              	.LBB54:
 550              	.LBB55:
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 551              		.loc 2 237 0
 552              		.syntax unified
 553              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 554 0004 4FF05003 			mov r3, #80												
 555 0008 83F31188 		msr basepri, r3											
 556 000c BFF36F8F 		isb														
 557 0010 BFF34F8F 		dsb														
 558              	
 559              	@ 0 "" 2
 560              	.LVL56:
 561              		.thumb
 562              		.syntax unified
 563              	.L44:
 564 0014 FEE7     		b	.L44
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 29


 565              	.L43:
 566 0016 0446     		mov	r4, r0
 567              	.LBE55:
 568              	.LBE54:
 542:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 569              		.loc 1 542 0
 570 0018 11F07F4F 		tst	r1, #-16777216
 571 001c 08D0     		beq	.L45
 572              	.LBB56:
 573              	.LBB57:
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 574              		.loc 2 237 0
 575              		.syntax unified
 576              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 577 001e 4FF05003 			mov r3, #80												
 578 0022 83F31188 		msr basepri, r3											
 579 0026 BFF36F8F 		isb														
 580 002a BFF34F8F 		dsb														
 581              	
 582              	@ 0 "" 2
 583              	.LVL57:
 584              		.thumb
 585              		.syntax unified
 586              	.L46:
 587 002e FEE7     		b	.L46
 588              	.L45:
 589 0030 0D46     		mov	r5, r1
 590              	.LVL58:
 591              	.LBE57:
 592              	.LBE56:
 545:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	vTaskSuspendAll();
 593              		.loc 1 545 0
 594 0032 00F10C06 		add	r6, r0, #12
 595              	.LVL59:
 546:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 596              		.loc 1 546 0
 597 0036 FFF7FEFF 		bl	vTaskSuspendAll
 598              	.LVL60:
 550:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 599              		.loc 1 550 0
 600 003a 2069     		ldr	r0, [r4, #16]
 601              	.LVL61:
 553:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 602              		.loc 1 553 0
 603 003c 2368     		ldr	r3, [r4]
 604 003e 2B43     		orrs	r3, r3, r5
 605 0040 2360     		str	r3, [r4]
 535:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 606              		.loc 1 535 0
 607 0042 0025     		movs	r5, #0
 608              	.LVL62:
 556:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 609              		.loc 1 556 0
 610 0044 04E0     		b	.L47
 611              	.LVL63:
 612              	.L48:
 578:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 30


 613              		.loc 1 578 0
 614 0046 2168     		ldr	r1, [r4]
 615 0048 33EA0101 		bics	r1, r3, r1
 616 004c 0CD0     		beq	.L49
 617              	.LVL64:
 618              	.L50:
 531:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** ListItem_t *pxListItem, *pxNext;
 619              		.loc 1 531 0
 620 004e 3846     		mov	r0, r7
 621              	.LVL65:
 622              	.L47:
 556:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 623              		.loc 1 556 0
 624 0050 B042     		cmp	r0, r6
 625 0052 13D0     		beq	.L54
 558:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 626              		.loc 1 558 0
 627 0054 4768     		ldr	r7, [r0, #4]
 628              	.LVL66:
 559:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			xMatchFound = pdFALSE;
 629              		.loc 1 559 0
 630 0056 0268     		ldr	r2, [r0]
 631              	.LVL67:
 564:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 632              		.loc 1 564 0
 633 0058 22F07F43 		bic	r3, r2, #-16777216
 634              	.LVL68:
 566:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 635              		.loc 1 566 0
 636 005c 12F0806F 		tst	r2, #67108864
 637 0060 F1D1     		bne	.L48
 569:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 638              		.loc 1 569 0
 639 0062 2168     		ldr	r1, [r4]
 640 0064 1942     		tst	r1, r3
 641 0066 F2D0     		beq	.L50
 642              	.L49:
 591:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 643              		.loc 1 591 0
 644 0068 12F0807F 		tst	r2, #16777216
 645 006c 00D0     		beq	.L51
 593:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 646              		.loc 1 593 0
 647 006e 1D43     		orrs	r5, r5, r3
 648              	.LVL69:
 649              	.L51:
 605:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 650              		.loc 1 605 0
 651 0070 2168     		ldr	r1, [r4]
 652 0072 41F00071 		orr	r1, r1, #33554432
 653 0076 FFF7FEFF 		bl	xTaskRemoveFromUnorderedEventList
 654              	.LVL70:
 655 007a E8E7     		b	.L50
 656              	.LVL71:
 657              	.L54:
 616:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 658              		.loc 1 616 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 31


 659 007c 2368     		ldr	r3, [r4]
 660 007e 23EA0503 		bic	r3, r3, r5
 661 0082 2360     		str	r3, [r4]
 618:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 662              		.loc 1 618 0
 663 0084 FFF7FEFF 		bl	xTaskResumeAll
 664              	.LVL72:
 621:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 665              		.loc 1 621 0
 666 0088 2068     		ldr	r0, [r4]
 667 008a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 668              		.cfi_endproc
 669              	.LFE10:
 671              		.section	.text.xEventGroupSync,"ax",%progbits
 672              		.align	1
 673              		.global	xEventGroupSync
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	xEventGroupSync:
 680              	.LFB6:
 209:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 681              		.loc 1 209 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              	.LVL73:
 215:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 686              		.loc 1 215 0
 687 0000 12F07F4F 		tst	r2, #-16777216
 688 0004 08D0     		beq	.L56
 689              	.LBB58:
 690              	.LBB59:
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 691              		.loc 2 237 0
 692              		.syntax unified
 693              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 694 0006 4FF05003 			mov r3, #80												
 695 000a 83F31188 		msr basepri, r3											
 696 000e BFF36F8F 		isb														
 697 0012 BFF34F8F 		dsb														
 698              	
 699              	@ 0 "" 2
 700              	.LVL74:
 701              		.thumb
 702              		.syntax unified
 703              	.L57:
 704 0016 FEE7     		b	.L57
 705              	.LVL75:
 706              	.L56:
 707              	.LBE59:
 708              	.LBE58:
 209:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 709              		.loc 1 209 0
 710 0018 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 711              	.LCFI4:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 32


 712              		.cfi_def_cfa_offset 24
 713              		.cfi_offset 4, -24
 714              		.cfi_offset 5, -20
 715              		.cfi_offset 6, -16
 716              		.cfi_offset 7, -12
 717              		.cfi_offset 8, -8
 718              		.cfi_offset 14, -4
 719 001c 0646     		mov	r6, r0
 720 001e 8846     		mov	r8, r1
 721 0020 1546     		mov	r5, r2
 722 0022 1F46     		mov	r7, r3
 216:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 723              		.loc 1 216 0
 724 0024 42B9     		cbnz	r2, .L58
 725              	.LBB60:
 726              	.LBB61:
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 727              		.loc 2 237 0
 728              		.syntax unified
 729              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 730 0026 4FF05003 			mov r3, #80												
 731 002a 83F31188 		msr basepri, r3											
 732 002e BFF36F8F 		isb														
 733 0032 BFF34F8F 		dsb														
 734              	
 735              	@ 0 "" 2
 736              	.LVL76:
 737              		.thumb
 738              		.syntax unified
 739              	.L59:
 740 0036 FEE7     		b	.L59
 741              	.LVL77:
 742              	.L58:
 743              	.LBE61:
 744              	.LBE60:
 219:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 745              		.loc 1 219 0
 746 0038 FFF7FEFF 		bl	xTaskGetSchedulerState
 747              	.LVL78:
 748 003c 48B9     		cbnz	r0, .L60
 219:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 749              		.loc 1 219 0 is_stmt 0 discriminator 2
 750 003e 47B1     		cbz	r7, .L60
 751              	.LBB62:
 752              	.LBB63:
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 753              		.loc 2 237 0 is_stmt 1
 754              		.syntax unified
 755              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 756 0040 4FF05003 			mov r3, #80												
 757 0044 83F31188 		msr basepri, r3											
 758 0048 BFF36F8F 		isb														
 759 004c BFF34F8F 		dsb														
 760              	
 761              	@ 0 "" 2
 762              	.LVL79:
 763              		.thumb
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 33


 764              		.syntax unified
 765              	.L61:
 766 0050 FEE7     		b	.L61
 767              	.L60:
 768              	.LBE63:
 769              	.LBE62:
 223:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 770              		.loc 1 223 0
 771 0052 FFF7FEFF 		bl	vTaskSuspendAll
 772              	.LVL80:
 225:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 773              		.loc 1 225 0
 774 0056 3468     		ldr	r4, [r6]
 775              	.LVL81:
 227:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 776              		.loc 1 227 0
 777 0058 4146     		mov	r1, r8
 778 005a 3046     		mov	r0, r6
 779 005c FFF7FEFF 		bl	xEventGroupSetBits
 780              	.LVL82:
 229:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 781              		.loc 1 229 0
 782 0060 44EA0804 		orr	r4, r4, r8
 783              	.LVL83:
 784 0064 35EA0403 		bics	r3, r5, r4
 785 0068 26D1     		bne	.L62
 786              	.LVL84:
 236:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 787              		.loc 1 236 0
 788 006a 3368     		ldr	r3, [r6]
 789 006c 23EA0503 		bic	r3, r3, r5
 790 0070 3360     		str	r3, [r6]
 791              	.LVL85:
 238:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 792              		.loc 1 238 0
 793 0072 0027     		movs	r7, #0
 794              	.LVL86:
 795              	.L63:
 265:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 796              		.loc 1 265 0
 797 0074 FFF7FEFF 		bl	xTaskResumeAll
 798              	.LVL87:
 267:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 799              		.loc 1 267 0
 800 0078 DFB1     		cbz	r7, .L55
 269:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 801              		.loc 1 269 0
 802 007a 38B9     		cbnz	r0, .L66
 271:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 803              		.loc 1 271 0
 804 007c 144B     		ldr	r3, .L71
 805 007e 4FF08052 		mov	r2, #268435456
 806 0082 1A60     		str	r2, [r3]
 807              		.syntax unified
 808              	@ 271 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 809 0084 BFF34F8F 		dsb
 810              	@ 0 "" 2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 34


 811              	@ 271 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 812 0088 BFF36F8F 		isb
 813              	@ 0 "" 2
 814              		.thumb
 815              		.syntax unified
 816              	.L66:
 282:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 817              		.loc 1 282 0
 818 008c FFF7FEFF 		bl	uxTaskResetEventItemValue
 819              	.LVL88:
 820 0090 0446     		mov	r4, r0
 821              	.LVL89:
 284:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 822              		.loc 1 284 0
 823 0092 10F0007F 		tst	r0, #33554432
 824 0096 0AD1     		bne	.L67
 287:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 825              		.loc 1 287 0
 826 0098 FFF7FEFF 		bl	vPortEnterCritical
 827              	.LVL90:
 289:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 828              		.loc 1 289 0
 829 009c 3468     		ldr	r4, [r6]
 830              	.LVL91:
 295:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				{
 831              		.loc 1 295 0
 832 009e 35EA0403 		bics	r3, r5, r4
 833 00a2 02D1     		bne	.L68
 297:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 				}
 834              		.loc 1 297 0
 835 00a4 24EA0505 		bic	r5, r4, r5
 836              	.LVL92:
 837 00a8 3560     		str	r5, [r6]
 838              	.L68:
 304:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 839              		.loc 1 304 0
 840 00aa FFF7FEFF 		bl	vPortExitCritical
 841              	.LVL93:
 842              	.L67:
 315:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	}
 843              		.loc 1 315 0
 844 00ae 24F07F44 		bic	r4, r4, #-16777216
 845              	.LVL94:
 846              	.L55:
 321:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 847              		.loc 1 321 0
 848 00b2 2046     		mov	r0, r4
 849 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 850              	.LVL95:
 851              	.L62:
 242:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			{
 852              		.loc 1 242 0
 853 00b8 3FB1     		cbz	r7, .L64
 249:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 
 854              		.loc 1 249 0
 855 00ba 3A46     		mov	r2, r7
 856 00bc 45F0A061 		orr	r1, r5, #83886080
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 35


 857 00c0 301D     		adds	r0, r6, #4
 858 00c2 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 859              	.LVL96:
 255:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 860              		.loc 1 255 0
 861 00c6 0024     		movs	r4, #0
 862 00c8 D4E7     		b	.L63
 863              	.LVL97:
 864              	.L64:
 261:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			}
 865              		.loc 1 261 0
 866 00ca 3468     		ldr	r4, [r6]
 867              	.LVL98:
 868 00cc D2E7     		b	.L63
 869              	.L72:
 870 00ce 00BF     		.align	2
 871              	.L71:
 872 00d0 04ED00E0 		.word	-536810236
 873              		.cfi_endproc
 874              	.LFE6:
 876              		.section	.text.vEventGroupDelete,"ax",%progbits
 877              		.align	1
 878              		.global	vEventGroupDelete
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu fpv4-sp-d16
 884              	vEventGroupDelete:
 885              	.LFB11:
 625:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 886              		.loc 1 625 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL99:
 891 0000 10B5     		push	{r4, lr}
 892              	.LCFI5:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 4, -8
 895              		.cfi_offset 14, -4
 896 0002 0446     		mov	r4, r0
 897              	.LVL100:
 629:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	{
 898              		.loc 1 629 0
 899 0004 FFF7FEFF 		bl	vTaskSuspendAll
 900              	.LVL101:
 901              	.L74:
 633:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		{
 902              		.loc 1 633 0
 903 0008 6368     		ldr	r3, [r4, #4]
 904 000a 93B1     		cbz	r3, .L79
 637:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 			( void ) xTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 905              		.loc 1 637 0
 906 000c 2069     		ldr	r0, [r4, #16]
 907 000e 04F10C03 		add	r3, r4, #12
 908 0012 9842     		cmp	r0, r3
 909 0014 04D0     		beq	.L80
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 36


 638:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 		}
 910              		.loc 1 638 0
 911 0016 4FF00071 		mov	r1, #33554432
 912 001a FFF7FEFF 		bl	xTaskRemoveFromUnorderedEventList
 913              	.LVL102:
 914 001e F3E7     		b	.L74
 915              	.L80:
 916              	.LBB64:
 917              	.LBB65:
 237:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 918              		.loc 2 237 0
 919              		.syntax unified
 920              	@ 237 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS
 921 0020 4FF05003 			mov r3, #80												
 922 0024 83F31188 		msr basepri, r3											
 923 0028 BFF36F8F 		isb														
 924 002c BFF34F8F 		dsb														
 925              	
 926              	@ 0 "" 2
 927              	.LVL103:
 928              		.thumb
 929              		.syntax unified
 930              	.L76:
 931 0030 FEE7     		b	.L76
 932              	.L79:
 933              	.LBE65:
 934              	.LBE64:
 662:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 935              		.loc 1 662 0
 936 0032 FFF7FEFF 		bl	xTaskResumeAll
 937              	.LVL104:
 663:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 938              		.loc 1 663 0
 939 0036 10BD     		pop	{r4, pc}
 940              		.cfi_endproc
 941              	.LFE11:
 943              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 944              		.align	1
 945              		.global	vEventGroupSetBitsCallback
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	vEventGroupSetBitsCallback:
 952              	.LFB12:
 669:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 953              		.loc 1 669 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              	.LVL105:
 958 0000 08B5     		push	{r3, lr}
 959              	.LCFI6:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 3, -8
 962              		.cfi_offset 14, -4
 670:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 37


 963              		.loc 1 670 0
 964 0002 FFF7FEFF 		bl	xEventGroupSetBits
 965              	.LVL106:
 671:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 966              		.loc 1 671 0
 967 0006 08BD     		pop	{r3, pc}
 968              		.cfi_endproc
 969              	.LFE12:
 971              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 972              		.align	1
 973              		.global	vEventGroupClearBitsCallback
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 977              		.fpu fpv4-sp-d16
 979              	vEventGroupClearBitsCallback:
 980              	.LFB13:
 677:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 981              		.loc 1 677 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              	.LVL107:
 986 0000 08B5     		push	{r3, lr}
 987              	.LCFI7:
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 3, -8
 990              		.cfi_offset 14, -4
 678:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** }
 991              		.loc 1 678 0
 992 0002 FFF7FEFF 		bl	xEventGroupClearBits
 993              	.LVL108:
 679:C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeRTOS/Source\event_groups.c **** /*-----------------------------------------------------------*/
 994              		.loc 1 679 0
 995 0006 08BD     		pop	{r3, pc}
 996              		.cfi_endproc
 997              	.LFE13:
 999              		.text
 1000              	.Letext0:
 1001              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1002              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1003              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1004              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1005              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1006              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1007              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1008              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 1009              		.file 11 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/Free
 1010              		.file 12 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/Free
 1011              		.file 13 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/Free
 1012              		.file 14 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/Free
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 event_groups.c
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:18     .text.prvTestWaitCondition:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:24     .text.prvTestWaitCondition:00000000 prvTestWaitCondition
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:68     .text.xEventGroupCreateStatic:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:75     .text.xEventGroupCreateStatic:00000000 xEventGroupCreateStatic
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:126    .text.xEventGroupWaitBits:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:133    .text.xEventGroupWaitBits:00000000 xEventGroupWaitBits
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:379    .text.xEventGroupWaitBits:00000108 $d
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:385    .text.xEventGroupClearBits:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:392    .text.xEventGroupClearBits:00000000 xEventGroupClearBits
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:472    .text.xEventGroupGetBitsFromISR:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:479    .text.xEventGroupGetBitsFromISR:00000000 xEventGroupGetBitsFromISR
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:523    .text.xEventGroupSetBits:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:530    .text.xEventGroupSetBits:00000000 xEventGroupSetBits
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:672    .text.xEventGroupSync:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:679    .text.xEventGroupSync:00000000 xEventGroupSync
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:872    .text.xEventGroupSync:000000d0 $d
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:877    .text.vEventGroupDelete:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:884    .text.vEventGroupDelete:00000000 vEventGroupDelete
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:944    .text.vEventGroupSetBitsCallback:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:951    .text.vEventGroupSetBitsCallback:00000000 vEventGroupSetBitsCallback
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:972    .text.vEventGroupClearBitsCallback:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccVSnCDa.s:979    .text.vEventGroupClearBitsCallback:00000000 vEventGroupClearBitsCallback

UNDEFINED SYMBOLS
vListInitialise
xTaskGetSchedulerState
vTaskSuspendAll
xTaskResumeAll
uxTaskResetEventItemValue
vPortEnterCritical
vPortExitCritical
vTaskPlaceOnUnorderedEventList
xTaskRemoveFromUnorderedEventList
