ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tune_motors.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Z4tunePfm,"ax",%progbits
  18              		.align	1
  19              		.global	_Z4tunePfm
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Z4tunePfm:
  26              	.LFB405:
  27              		.file 1 "Core/Src/robot/tune_motors.cpp"
   1:Core/Src/robot/tune_motors.cpp **** #include "pid_algorithms.h"
   2:Core/Src/robot/tune_motors.cpp **** #include "pid.h"
   3:Core/Src/robot/tune_motors.cpp **** #include <math.h>
   4:Core/Src/robot/tune_motors.cpp **** #include "tune_motors.h"
   5:Core/Src/robot/tune_motors.cpp **** 
   6:Core/Src/robot/tune_motors.cpp **** extern Wheel gWheels[4];
   7:Core/Src/robot/tune_motors.cpp **** 
   8:Core/Src/robot/tune_motors.cpp **** /**
   9:Core/Src/robot/tune_motors.cpp ****  * @brief Function that calculates and sets new omegas for each wheel according
  10:Core/Src/robot/tune_motors.cpp ****  *        to reach set points provided
  11:Core/Src/robot/tune_motors.cpp ****  * @param set_points : An array of 4 elements. This array holds the angular speed
  12:Core/Src/robot/tune_motors.cpp ****  *                    to be reached by each wheel in order
  13:Core/Src/robot/tune_motors.cpp ****  * @param dt_millis : The time period at which this function is called periodically
  14:Core/Src/robot/tune_motors.cpp ****  * @retval None
  15:Core/Src/robot/tune_motors.cpp ****  * 
  16:Core/Src/robot/tune_motors.cpp ****  * @note This function must be called periodically for it to actually work properly
  17:Core/Src/robot/tune_motors.cpp ****  * 
  18:Core/Src/robot/tune_motors.cpp ****  * <pre>
  19:Core/Src/robot/tune_motors.cpp ****  * Tasks To Be Done By tune function
  20:Core/Src/robot/tune_motors.cpp ****  * 1) Measure omega of each wheels
  21:Core/Src/robot/tune_motors.cpp ****  * 2) Compute error
  22:Core/Src/robot/tune_motors.cpp ****  * 3) Compute PID using available PID_Algorithm
  23:Core/Src/robot/tune_motors.cpp ****  * 4) set Omega of each wheel
  24:Core/Src/robot/tune_motors.cpp ****  * 5) update new omegas of all wheels at once
  25:Core/Src/robot/tune_motors.cpp ****  * </pre>
  26:Core/Src/robot/tune_motors.cpp ****  */
  27:Core/Src/robot/tune_motors.cpp **** void tune(float set_points[4], uint32_t dt_millis)
  28:Core/Src/robot/tune_motors.cpp **** {
  28              		.loc 1 28 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 2


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 14, -4
  44 0004 8246     		mov	r10, r0
  45 0006 8946     		mov	r9, r1
  46              	.LVL1:
  47              	.LBB28:
  29:Core/Src/robot/tune_motors.cpp ****         float omega[4];
  30:Core/Src/robot/tune_motors.cpp ****         float error[4];
  31:Core/Src/robot/tune_motors.cpp ****         float voltage[4];
  32:Core/Src/robot/tune_motors.cpp ****         float new_omega[4];
  33:Core/Src/robot/tune_motors.cpp ****         PID *pid;
  34:Core/Src/robot/tune_motors.cpp ****         float max_voltage;
  35:Core/Src/robot/tune_motors.cpp ****         float max_omega;
  36:Core/Src/robot/tune_motors.cpp **** 
  37:Core/Src/robot/tune_motors.cpp ****         for (uint8_t i = 0; i < 4; ++i) {
  48              		.loc 1 37 0
  49 0008 0024     		movs	r4, #0
  50              	.LVL2:
  51              	.L3:
  52              		.loc 1 37 0 is_stmt 0 discriminator 3
  53 000a 032C     		cmp	r4, #3
  54 000c 2AD8     		bhi	.L5
  38:Core/Src/robot/tune_motors.cpp ****                 omega[i] = gWheels[i].get_Omega(dt_millis);
  55              		.loc 1 38 0 is_stmt 1 discriminator 2
  56 000e 6500     		lsls	r5, r4, #1
  57 0010 2B19     		adds	r3, r5, r4
  58 0012 9F00     		lsls	r7, r3, #2
  59 0014 1B4E     		ldr	r6, .L7
  60 0016 07EB0608 		add	r8, r7, r6
  61 001a 4946     		mov	r1, r9
  62 001c 4046     		mov	r0, r8
  63 001e FFF7FEFF 		bl	_ZN5Wheel9get_OmegaEm
  64              	.LVL3:
  39:Core/Src/robot/tune_motors.cpp ****                 error[i] = set_points[i] - omega[i];
  65              		.loc 1 39 0 discriminator 2
  66 0022 0AEB8403 		add	r3, r10, r4, lsl #2
  67 0026 D3ED007A 		vldr.32	s15, [r3]
  68              	.LVL4:
  69              	.LBB29:
  70              	.LBB30:
  71              		.file 2 "Core/Inc\\devs/wheel.h"
   1:Core/Inc\devs/wheel.h **** /*
   2:Core/Inc\devs/wheel.h ****  * wheel.h
   3:Core/Inc\devs/wheel.h ****  *
   4:Core/Inc\devs/wheel.h ****  * Created : 10/1/2018
   5:Core/Inc\devs/wheel.h ****  */
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 3


   6:Core/Inc\devs/wheel.h **** 
   7:Core/Inc\devs/wheel.h **** #ifndef _WHEEL_H_
   8:Core/Inc\devs/wheel.h **** #define _WHEEL_H_
   9:Core/Inc\devs/wheel.h **** 
  10:Core/Inc\devs/wheel.h **** #include "stm32f4xx_hal.h"
  11:Core/Inc\devs/wheel.h **** #include "tim.h"
  12:Core/Inc\devs/wheel.h **** 
  13:Core/Inc\devs/wheel.h **** #include "defines.h"
  14:Core/Inc\devs/wheel.h **** 
  15:Core/Inc\devs/wheel.h **** #include "pid_algorithms.h"
  16:Core/Inc\devs/wheel.h **** #include "pid.h"
  17:Core/Inc\devs/wheel.h **** 
  18:Core/Inc\devs/wheel.h **** enum Direction
  19:Core/Inc\devs/wheel.h **** {
  20:Core/Inc\devs/wheel.h ****         AHEAD,
  21:Core/Inc\devs/wheel.h ****         BACK,
  22:Core/Inc\devs/wheel.h ****         HALT
  23:Core/Inc\devs/wheel.h **** };
  24:Core/Inc\devs/wheel.h **** 
  25:Core/Inc\devs/wheel.h **** struct Wheel_Config
  26:Core/Inc\devs/wheel.h **** {
  27:Core/Inc\devs/wheel.h ****         uint8_t id;
  28:Core/Inc\devs/wheel.h ****         float radius;
  29:Core/Inc\devs/wheel.h **** 
  30:Core/Inc\devs/wheel.h ****         GPIO_TypeDef *in1_port;
  31:Core/Inc\devs/wheel.h ****         uint16_t in1_pin;
  32:Core/Inc\devs/wheel.h ****         GPIO_TypeDef *in2_port;
  33:Core/Inc\devs/wheel.h ****         uint16_t in2_pin;
  34:Core/Inc\devs/wheel.h **** 
  35:Core/Inc\devs/wheel.h ****         TIM_HandleTypeDef *htim;        // PWM Generating Timer
  36:Core/Inc\devs/wheel.h ****         uint32_t channel;               // PWM Channel
  37:Core/Inc\devs/wheel.h **** 
  38:Core/Inc\devs/wheel.h ****         TIM_HandleTypeDef *henc;
  39:Core/Inc\devs/wheel.h ****         
  40:Core/Inc\devs/wheel.h ****         float tolerance;                // Tolerance level for zero
  41:Core/Inc\devs/wheel.h ****         float max_omega;
  42:Core/Inc\devs/wheel.h ****         uint32_t enc_ppr;
  43:Core/Inc\devs/wheel.h **** 
  44:Core/Inc\devs/wheel.h ****         PID *pid_controller;            // Pointer to the wheel's PID controller
  45:Core/Inc\devs/wheel.h **** };
  46:Core/Inc\devs/wheel.h **** 
  47:Core/Inc\devs/wheel.h **** class Wheel
  48:Core/Inc\devs/wheel.h **** {
  49:Core/Inc\devs/wheel.h **** public:
  50:Core/Inc\devs/wheel.h ****         Wheel() { wheel_ = 0; }
  51:Core/Inc\devs/wheel.h ****         Wheel(Wheel_Config *wheel) { wheel_ = wheel; }
  52:Core/Inc\devs/wheel.h ****         Wheel(Wheel &&) = default;
  53:Core/Inc\devs/wheel.h ****         Wheel(const Wheel &) = default;
  54:Core/Inc\devs/wheel.h ****         Wheel &operator=(Wheel &&) = default;
  55:Core/Inc\devs/wheel.h ****         Wheel &operator=(const Wheel &) = default;
  56:Core/Inc\devs/wheel.h ****         ~Wheel() { }
  57:Core/Inc\devs/wheel.h ****         
  58:Core/Inc\devs/wheel.h ****         void set_Config(Wheel_Config *wheel) { wheel_ = wheel; }
  59:Core/Inc\devs/wheel.h ****         void set_Direction(enum Direction d) { dir_ = d; }
  60:Core/Inc\devs/wheel.h ****         void set_Omega(float omega);
  61:Core/Inc\devs/wheel.h ****         void update() const;
  62:Core/Inc\devs/wheel.h **** 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 4


  63:Core/Inc\devs/wheel.h ****         float get_Omega(uint32_t dt_millis);
  64:Core/Inc\devs/wheel.h ****         float get_MaxOmega() { return wheel_->max_omega; }
  65:Core/Inc\devs/wheel.h **** 
  66:Core/Inc\devs/wheel.h ****         void set_PIDController(PID *pid) { wheel_->pid_controller = pid; }
  67:Core/Inc\devs/wheel.h ****         PID * get_PIDController() {
  68:Core/Inc\devs/wheel.h ****                 return wheel_->pid_controller;
  72              		.loc 2 68 0 discriminator 2
  73 002a BB59     		ldr	r3, [r7, r6]
  74 002c 1F6B     		ldr	r7, [r3, #48]
  75              	.LVL5:
  76              	.LBE30:
  77              	.LBE29:
  78              	.LBB31:
  79              	.LBB32:
  80              		.file 3 "Core/Inc\\utils/pid.h"
   1:Core/Inc\utils/pid.h **** #ifndef _PID_H_
   2:Core/Inc\utils/pid.h **** #define _PID_H_
   3:Core/Inc\utils/pid.h **** 
   4:Core/Inc\utils/pid.h **** #include "pid_algorithms.h"
   5:Core/Inc\utils/pid.h **** 
   6:Core/Inc\utils/pid.h **** class PID
   7:Core/Inc\utils/pid.h **** {
   8:Core/Inc\utils/pid.h **** public:
   9:Core/Inc\utils/pid.h ****         PID() { }
  10:Core/Inc\utils/pid.h ****         PID(PID_Algorithm *algo) { set_Algorithm(algo); }
  11:Core/Inc\utils/pid.h ****         PID(PID &&) = default;
  12:Core/Inc\utils/pid.h ****         PID(const PID &) = default;
  13:Core/Inc\utils/pid.h ****         PID &operator=(PID &&) = default;
  14:Core/Inc\utils/pid.h ****         PID &operator=(const PID &) = default;
  15:Core/Inc\utils/pid.h ****         ~PID() { }
  16:Core/Inc\utils/pid.h **** 
  17:Core/Inc\utils/pid.h ****         void set_Algorithm(PID_Algorithm *algo) { algo_ = algo; }
  18:Core/Inc\utils/pid.h ****         PID_Algorithm * get_Algorithm() { return algo_; }
  19:Core/Inc\utils/pid.h **** 
  20:Core/Inc\utils/pid.h ****         float compute_PID(float err, uint32_t dt_millis) {
  21:Core/Inc\utils/pid.h ****                 return algo_->compute(err, dt_millis);
  81              		.loc 3 21 0 discriminator 2
  82 002e 3868     		ldr	r0, [r7]
  83 0030 0368     		ldr	r3, [r0]
  84 0032 1B68     		ldr	r3, [r3]
  85 0034 4946     		mov	r1, r9
  86 0036 37EEC00A 		vsub.f32	s0, s15, s0
  87              	.LVL6:
  88 003a 9847     		blx	r3
  89              	.LVL7:
  90              	.LBE32:
  91              	.LBE31:
  92              	.LBB33:
  93              	.LBB34:
  18:Core/Inc\utils/pid.h **** 
  94              		.loc 3 18 0 discriminator 2
  95 003c 3B68     		ldr	r3, [r7]
  96              	.LBE34:
  97              	.LBE33:
  98              	.LBB35:
  99              	.LBB36:
 100              		.file 4 "Core/Inc\\utils/pid_algorithms.h"
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 5


   1:Core/Inc\utils/pid_algorithms.h **** #ifndef _PID_ALGORITHMS_H_
   2:Core/Inc\utils/pid_algorithms.h **** #define _PID_ALGORITHMS_H_
   3:Core/Inc\utils/pid_algorithms.h **** 
   4:Core/Inc\utils/pid_algorithms.h **** #include <stdint.h>
   5:Core/Inc\utils/pid_algorithms.h **** 
   6:Core/Inc\utils/pid_algorithms.h **** class PID_Algorithm
   7:Core/Inc\utils/pid_algorithms.h **** {
   8:Core/Inc\utils/pid_algorithms.h **** public:
   9:Core/Inc\utils/pid_algorithms.h ****         PID_Algorithm() { set_PID(0,0,0); }
  10:Core/Inc\utils/pid_algorithms.h ****         PID_Algorithm(float p, float i, float d) { set_PID(p,i,d); }
  11:Core/Inc\utils/pid_algorithms.h ****         virtual float compute(float error, uint32_t dt_millis) = 0;
  12:Core/Inc\utils/pid_algorithms.h **** 
  13:Core/Inc\utils/pid_algorithms.h ****         void set_P(float p) { p_ = p; }
  14:Core/Inc\utils/pid_algorithms.h ****         void set_I(float i) { i_ = i; }
  15:Core/Inc\utils/pid_algorithms.h ****         void set_D(float d) { d_ = d; }
  16:Core/Inc\utils/pid_algorithms.h ****         void set_PID(float p, float i, float d) {
  17:Core/Inc\utils/pid_algorithms.h ****                 set_P(p);
  18:Core/Inc\utils/pid_algorithms.h ****                 set_I(i);
  19:Core/Inc\utils/pid_algorithms.h ****                 set_D(d);
  20:Core/Inc\utils/pid_algorithms.h ****         }
  21:Core/Inc\utils/pid_algorithms.h ****         float get_P() { return p_; }
  22:Core/Inc\utils/pid_algorithms.h ****         float get_I() { return i_; }
  23:Core/Inc\utils/pid_algorithms.h ****         float get_D() { return d_; }
  24:Core/Inc\utils/pid_algorithms.h **** 
  25:Core/Inc\utils/pid_algorithms.h ****         void set_Limits(float max_out, float min_out) {
  26:Core/Inc\utils/pid_algorithms.h ****                 max_ = max_out;
  27:Core/Inc\utils/pid_algorithms.h ****                 min_ = min_out;
  28:Core/Inc\utils/pid_algorithms.h ****         }
  29:Core/Inc\utils/pid_algorithms.h **** 
  30:Core/Inc\utils/pid_algorithms.h ****         float get_Upper() { return max_; }
 101              		.loc 4 30 0 discriminator 2
 102 003e D3ED047A 		vldr.32	s15, [r3, #16]
 103              	.LBE36:
 104              	.LBE35:
  40:Core/Src/robot/tune_motors.cpp ****                 pid = gWheels[i].get_PIDController();
  41:Core/Src/robot/tune_motors.cpp ****                 voltage[i] = pid->compute_PID(error[i], dt_millis);
  42:Core/Src/robot/tune_motors.cpp **** 
  43:Core/Src/robot/tune_motors.cpp ****                 // Max Omega corresponds to the max voltage value
  44:Core/Src/robot/tune_motors.cpp ****                 max_voltage = fabsf(pid->get_Algorithm()->get_Upper());
 105              		.loc 1 44 0 discriminator 2
 106 0042 F0EEE77A 		vabs.f32	s15, s15
 107              	.LVL8:
 108              	.LBB37:
 109              	.LBB38:
  64:Core/Inc\devs/wheel.h **** 
 110              		.loc 2 64 0 discriminator 2
 111 0046 2544     		add	r5, r5, r4
 112 0048 AB00     		lsls	r3, r5, #2
 113 004a F358     		ldr	r3, [r6, r3]
 114 004c 93ED0A7A 		vldr.32	s14, [r3, #40]
 115              	.LVL9:
 116              	.LBE38:
 117              	.LBE37:
  45:Core/Src/robot/tune_motors.cpp ****                 max_omega = gWheels[i].get_MaxOmega();
  46:Core/Src/robot/tune_motors.cpp ****                 new_omega[i] = voltage[i] * max_omega / max_voltage;
 118              		.loc 1 46 0 discriminator 2
 119 0050 27EE000A 		vmul.f32	s0, s14, s0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 6


  47:Core/Src/robot/tune_motors.cpp **** 
  48:Core/Src/robot/tune_motors.cpp ****                 gWheels[i].set_Omega(new_omega[i]);
 120              		.loc 1 48 0 discriminator 2
 121 0054 80EE270A 		vdiv.f32	s0, s0, s15
 122 0058 4046     		mov	r0, r8
 123 005a FFF7FEFF 		bl	_ZN5Wheel9set_OmegaEf
 124              	.LVL10:
  37:Core/Src/robot/tune_motors.cpp ****                 omega[i] = gWheels[i].get_Omega(dt_millis);
 125              		.loc 1 37 0 discriminator 2
 126 005e 0134     		adds	r4, r4, #1
 127              	.LVL11:
 128 0060 E4B2     		uxtb	r4, r4
 129              	.LVL12:
 130 0062 D2E7     		b	.L3
 131              	.L5:
 132              	.LBE28:
 133              	.LBB39:
  49:Core/Src/robot/tune_motors.cpp ****                 // printf("(%ld, %ld)  ", (int32_t)(omega[i]*1000), (int32_t)(new_omega[i]*1000));
  50:Core/Src/robot/tune_motors.cpp ****         }
  51:Core/Src/robot/tune_motors.cpp ****         // printf("\n");
  52:Core/Src/robot/tune_motors.cpp **** 
  53:Core/Src/robot/tune_motors.cpp ****         // We don't want to delete the poninter since it was not us who allocated it
  54:Core/Src/robot/tune_motors.cpp ****         pid = 0;
  55:Core/Src/robot/tune_motors.cpp **** 
  56:Core/Src/robot/tune_motors.cpp ****         for (uint8_t i = 0; i < 4; ++i) {
 134              		.loc 1 56 0
 135 0064 0024     		movs	r4, #0
 136              	.LVL13:
 137              	.L2:
 138              		.loc 1 56 0 is_stmt 0 discriminator 3
 139 0066 032C     		cmp	r4, #3
 140 0068 09D8     		bhi	.L1
  57:Core/Src/robot/tune_motors.cpp ****                 gWheels[i].update();
 141              		.loc 1 57 0 is_stmt 1 discriminator 2
 142 006a 04EB4402 		add	r2, r4, r4, lsl #1
 143 006e 9300     		lsls	r3, r2, #2
 144 0070 0448     		ldr	r0, .L7
 145 0072 1844     		add	r0, r0, r3
 146 0074 FFF7FEFF 		bl	_ZNK5Wheel6updateEv
 147              	.LVL14:
  56:Core/Src/robot/tune_motors.cpp ****                 gWheels[i].update();
 148              		.loc 1 56 0 discriminator 2
 149 0078 0134     		adds	r4, r4, #1
 150              	.LVL15:
 151 007a E4B2     		uxtb	r4, r4
 152              	.LVL16:
 153 007c F3E7     		b	.L2
 154              	.L1:
 155              	.LBE39:
  58:Core/Src/robot/tune_motors.cpp ****         }
  59:Core/Src/robot/tune_motors.cpp **** }
 156              		.loc 1 59 0
 157 007e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 158              	.LVL17:
 159              	.L8:
 160 0082 00BF     		.align	2
 161              	.L7:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 7


 162 0084 00000000 		.word	gWheels
 163              		.cfi_endproc
 164              	.LFE405:
 166              		.section	.text._Z9ramp_downm,"ax",%progbits
 167              		.align	1
 168              		.global	_Z9ramp_downm
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu fpv4-sp-d16
 174              	_Z9ramp_downm:
 175              	.LFB406:
  60:Core/Src/robot/tune_motors.cpp **** 
  61:Core/Src/robot/tune_motors.cpp **** void ramp_down(uint32_t dt_millis)
  62:Core/Src/robot/tune_motors.cpp **** {
 176              		.loc 1 62 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              	.LVL18:
 181 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 182              	.LCFI1:
 183              		.cfi_def_cfa_offset 32
 184              		.cfi_offset 4, -32
 185              		.cfi_offset 5, -28
 186              		.cfi_offset 6, -24
 187              		.cfi_offset 7, -20
 188              		.cfi_offset 8, -16
 189              		.cfi_offset 9, -12
 190              		.cfi_offset 10, -8
 191              		.cfi_offset 14, -4
 192 0004 0646     		mov	r6, r0
 193              	.LVL19:
 194              	.LBB40:
  63:Core/Src/robot/tune_motors.cpp ****         float omega[4];
  64:Core/Src/robot/tune_motors.cpp ****         float error[4];
  65:Core/Src/robot/tune_motors.cpp ****         float voltage[4];
  66:Core/Src/robot/tune_motors.cpp ****         float new_omega[4];
  67:Core/Src/robot/tune_motors.cpp ****         PID *pid;
  68:Core/Src/robot/tune_motors.cpp ****         float max_voltage;
  69:Core/Src/robot/tune_motors.cpp ****         float max_omega;
  70:Core/Src/robot/tune_motors.cpp **** 
  71:Core/Src/robot/tune_motors.cpp ****         for (uint8_t j = 0; j < 10; ++j) {
 195              		.loc 1 71 0
 196 0006 0027     		movs	r7, #0
 197 0008 54E0     		b	.L17
 198              	.LVL20:
 199              	.L22:
 200              	.LBB41:
 201              	.LBB42:
  72:Core/Src/robot/tune_motors.cpp ****                 
  73:Core/Src/robot/tune_motors.cpp ****                 for (uint8_t i = 0; i < 4; ++i) {
  74:Core/Src/robot/tune_motors.cpp ****                         omega[i] = gWheels[i].get_Omega(dt_millis);
  75:Core/Src/robot/tune_motors.cpp ****                         if (fabsf(omega[i]) < 5) {
  76:Core/Src/robot/tune_motors.cpp ****                                 gWheels[i].set_Omega(0);
 202              		.loc 1 76 0
 203 000a 9FED2D0A 		vldr.32	s0, .L23
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 8


 204 000e 4046     		mov	r0, r8
 205 0010 FFF7FEFF 		bl	_ZN5Wheel9set_OmegaEf
 206              	.LVL21:
 207              	.L14:
  73:Core/Src/robot/tune_motors.cpp ****                         omega[i] = gWheels[i].get_Omega(dt_millis);
 208              		.loc 1 73 0 discriminator 2
 209 0014 0134     		adds	r4, r4, #1
 210              	.LVL22:
 211 0016 E4B2     		uxtb	r4, r4
 212              	.LVL23:
 213              	.L15:
  73:Core/Src/robot/tune_motors.cpp ****                         omega[i] = gWheels[i].get_Omega(dt_millis);
 214              		.loc 1 73 0 is_stmt 0 discriminator 1
 215 0018 032C     		cmp	r4, #3
 216 001a 39D8     		bhi	.L18
  74:Core/Src/robot/tune_motors.cpp ****                         if (fabsf(omega[i]) < 5) {
 217              		.loc 1 74 0 is_stmt 1
 218 001c 04EB4402 		add	r2, r4, r4, lsl #1
 219 0020 9300     		lsls	r3, r2, #2
 220 0022 284A     		ldr	r2, .L23+4
 221 0024 03EB0208 		add	r8, r3, r2
 222 0028 3146     		mov	r1, r6
 223 002a 4046     		mov	r0, r8
 224 002c FFF7FEFF 		bl	_ZN5Wheel9get_OmegaEm
 225              	.LVL24:
  75:Core/Src/robot/tune_motors.cpp ****                                 gWheels[i].set_Omega(0);
 226              		.loc 1 75 0
 227 0030 B0EEC07A 		vabs.f32	s14, s0
 228 0034 F1EE047A 		vmov.f32	s15, #5.0e+0
 229 0038 B4EEE77A 		vcmpe.f32	s14, s15
 230 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 231 0040 E3D4     		bmi	.L22
 232              	.LVL25:
 233              	.LBB43:
 234              	.LBB44:
 235              		.loc 2 68 0
 236 0042 DFF88090 		ldr	r9, .L23+4
 237 0046 6500     		lsls	r5, r4, #1
 238 0048 2A19     		adds	r2, r5, r4
 239 004a 9300     		lsls	r3, r2, #2
 240 004c 59F80330 		ldr	r3, [r9, r3]
 241 0050 D3F830A0 		ldr	r10, [r3, #48]
 242              	.LVL26:
 243              	.LBE44:
 244              	.LBE43:
 245              	.LBB45:
 246              	.LBB46:
 247              		.loc 3 21 0
 248 0054 DAF80000 		ldr	r0, [r10]
 249 0058 0368     		ldr	r3, [r0]
 250 005a 1B68     		ldr	r3, [r3]
 251 005c 3146     		mov	r1, r6
 252 005e F6EE007A 		vmov.f32	s15, #5.0e-1
 253 0062 27EEC00A 		vnmul.f32	s0, s15, s0
 254              	.LVL27:
 255 0066 9847     		blx	r3
 256              	.LVL28:
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 9


 257              	.LBE46:
 258              	.LBE45:
 259              	.LBB47:
 260              	.LBB48:
  18:Core/Inc\utils/pid.h **** 
 261              		.loc 3 18 0
 262 0068 DAF80030 		ldr	r3, [r10]
 263              	.LBE48:
 264              	.LBE47:
 265              	.LBB49:
 266              	.LBB50:
 267              		.loc 4 30 0
 268 006c D3ED047A 		vldr.32	s15, [r3, #16]
 269              	.LBE50:
 270              	.LBE49:
  77:Core/Src/robot/tune_motors.cpp ****                         }else {
  78:Core/Src/robot/tune_motors.cpp ****                                 pid = gWheels[i].get_PIDController();
  79:Core/Src/robot/tune_motors.cpp ****                                 error[i] = -(omega[i] / 2.0);
  80:Core/Src/robot/tune_motors.cpp ****                                 voltage[i] = pid->compute_PID(error[i], dt_millis);
  81:Core/Src/robot/tune_motors.cpp **** 
  82:Core/Src/robot/tune_motors.cpp ****                                 // Max Omega corresponds to the max voltage value
  83:Core/Src/robot/tune_motors.cpp ****                                 max_voltage = fabsf(pid->get_Algorithm()->get_Upper());
 271              		.loc 1 83 0
 272 0070 F0EEE77A 		vabs.f32	s15, s15
 273              	.LVL29:
 274              	.LBB51:
 275              	.LBB52:
  64:Core/Inc\devs/wheel.h **** 
 276              		.loc 2 64 0
 277 0074 2544     		add	r5, r5, r4
 278 0076 AB00     		lsls	r3, r5, #2
 279 0078 59F80330 		ldr	r3, [r9, r3]
 280 007c 93ED0A7A 		vldr.32	s14, [r3, #40]
 281              	.LVL30:
 282              	.LBE52:
 283              	.LBE51:
  84:Core/Src/robot/tune_motors.cpp ****                                 max_omega = gWheels[i].get_MaxOmega();
  85:Core/Src/robot/tune_motors.cpp ****                                 new_omega[i] = voltage[i] * max_omega / max_voltage;
 284              		.loc 1 85 0
 285 0080 27EE000A 		vmul.f32	s0, s14, s0
  86:Core/Src/robot/tune_motors.cpp **** 
  87:Core/Src/robot/tune_motors.cpp ****                                 gWheels[i].set_Omega(new_omega[i]);
 286              		.loc 1 87 0
 287 0084 80EE270A 		vdiv.f32	s0, s0, s15
 288 0088 4046     		mov	r0, r8
 289 008a FFF7FEFF 		bl	_ZN5Wheel9set_OmegaEf
 290              	.LVL31:
 291 008e C1E7     		b	.L14
 292              	.L18:
 293              	.LBE42:
 294              	.LBB53:
  88:Core/Src/robot/tune_motors.cpp ****                         }
  89:Core/Src/robot/tune_motors.cpp ****                 }
  90:Core/Src/robot/tune_motors.cpp **** 
  91:Core/Src/robot/tune_motors.cpp ****                 for (uint8_t i = 0; i < 4; ++i) {
 295              		.loc 1 91 0
 296 0090 0024     		movs	r4, #0
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 10


 297              	.LVL32:
 298              	.L11:
 299              		.loc 1 91 0 is_stmt 0 discriminator 3
 300 0092 032C     		cmp	r4, #3
 301 0094 09D8     		bhi	.L16
  92:Core/Src/robot/tune_motors.cpp ****                         gWheels[i].update();
 302              		.loc 1 92 0 is_stmt 1 discriminator 2
 303 0096 04EB4402 		add	r2, r4, r4, lsl #1
 304 009a 9300     		lsls	r3, r2, #2
 305 009c 0948     		ldr	r0, .L23+4
 306 009e 1844     		add	r0, r0, r3
 307 00a0 FFF7FEFF 		bl	_ZNK5Wheel6updateEv
 308              	.LVL33:
  91:Core/Src/robot/tune_motors.cpp ****                         gWheels[i].update();
 309              		.loc 1 91 0 discriminator 2
 310 00a4 0134     		adds	r4, r4, #1
 311              	.LVL34:
 312 00a6 E4B2     		uxtb	r4, r4
 313              	.LVL35:
 314 00a8 F3E7     		b	.L11
 315              	.L16:
 316              	.LBE53:
  93:Core/Src/robot/tune_motors.cpp ****                 }
  94:Core/Src/robot/tune_motors.cpp ****                 HAL_Delay(10);
 317              		.loc 1 94 0 discriminator 2
 318 00aa 0A20     		movs	r0, #10
 319 00ac FFF7FEFF 		bl	HAL_Delay
 320              	.LVL36:
 321              	.LBE41:
  71:Core/Src/robot/tune_motors.cpp ****                 
 322              		.loc 1 71 0 discriminator 2
 323 00b0 0137     		adds	r7, r7, #1
 324              	.LVL37:
 325 00b2 FFB2     		uxtb	r7, r7
 326              	.LVL38:
 327              	.L17:
  71:Core/Src/robot/tune_motors.cpp ****                 
 328              		.loc 1 71 0 is_stmt 0 discriminator 1
 329 00b4 092F     		cmp	r7, #9
 330 00b6 01D8     		bhi	.L9
 331              	.LBB55:
 332              	.LBB54:
  73:Core/Src/robot/tune_motors.cpp ****                         omega[i] = gWheels[i].get_Omega(dt_millis);
 333              		.loc 1 73 0 is_stmt 1
 334 00b8 0024     		movs	r4, #0
 335 00ba ADE7     		b	.L15
 336              	.L9:
 337              	.LBE54:
 338              	.LBE55:
 339              	.LBE40:
  95:Core/Src/robot/tune_motors.cpp ****         }
  96:Core/Src/robot/tune_motors.cpp **** }...
 340              		.loc 1 96 0
 341 00bc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 342              	.LVL39:
 343              	.L24:
 344              		.align	2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 11


 345              	.L23:
 346 00c0 00000000 		.word	0
 347 00c4 00000000 		.word	gWheels
 348              		.cfi_endproc
 349              	.LFE406:
 351              		.text
 352              	.Letext0:
 353              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 354              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 355              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 356              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 357              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 358              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 359              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 360              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 361              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 362              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 363              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 364              		.file 16 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core_c
 365              		.file 17 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM3
 366              		.file 18 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM3
 367              		.file 19 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver
 368              		.file 20 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver
 369              		.file 21 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver
 370              		.file 22 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver
 371              		.file 23 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver
 372              		.file 24 "Core/Inc\\periphs/tim.h"
 373              		.file 25 "Core/Inc\\periphs/usart.h"
 374              		.file 26 "Core/Inc\\periphs/adc.h"
 375              		.file 27 "<built-in>"
 376              		.file 28 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/STM32F4xx_HAL_Driver
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 tune_motors.cpp
C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s:18     .text._Z4tunePfm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s:25     .text._Z4tunePfm:00000000 _Z4tunePfm
C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s:162    .text._Z4tunePfm:00000084 $d
C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s:167    .text._Z9ramp_downm:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s:174    .text._Z9ramp_downm:00000000 _Z9ramp_downm
C:\Users\073be\AppData\Local\Temp\ccYNjMfZ.s:346    .text._Z9ramp_downm:000000c0 $d

UNDEFINED SYMBOLS
_ZN5Wheel9get_OmegaEm
_ZN5Wheel9set_OmegaEf
_ZNK5Wheel6updateEv
gWheels
HAL_Delay
