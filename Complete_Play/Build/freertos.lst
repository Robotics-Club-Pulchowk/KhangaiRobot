ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  18              		.align	1
  19              		.global	vApplicationGetIdleTaskMemory
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	vApplicationGetIdleTaskMemory:
  26              	.LFB131:
  27              		.file 1 "Core/Src/robot/freertos.c"
   1:Core/Src/robot/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/robot/freertos.c **** /**
   3:Core/Src/robot/freertos.c ****   ******************************************************************************
   4:Core/Src/robot/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/robot/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/robot/freertos.c ****   ******************************************************************************
   7:Core/Src/robot/freertos.c ****   * This notice applies to any and all portions of this file
   8:Core/Src/robot/freertos.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/robot/freertos.c ****   * USER CODE END. Other portions of this file, whether 
  10:Core/Src/robot/freertos.c ****   * inserted by the user or by software development tools
  11:Core/Src/robot/freertos.c ****   * are owned by their respective copyright owners.
  12:Core/Src/robot/freertos.c ****   *
  13:Core/Src/robot/freertos.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Core/Src/robot/freertos.c ****   * All rights reserved.
  15:Core/Src/robot/freertos.c ****   *
  16:Core/Src/robot/freertos.c ****   * Redistribution and use in source and binary forms, with or without 
  17:Core/Src/robot/freertos.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Core/Src/robot/freertos.c ****   *
  19:Core/Src/robot/freertos.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Core/Src/robot/freertos.c ****   *    this list of conditions and the following disclaimer.
  21:Core/Src/robot/freertos.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Core/Src/robot/freertos.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Core/Src/robot/freertos.c ****   *    and/or other materials provided with the distribution.
  24:Core/Src/robot/freertos.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Core/Src/robot/freertos.c ****   *    contributors to this software may be used to endorse or promote products 
  26:Core/Src/robot/freertos.c ****   *    derived from this software without specific written permission.
  27:Core/Src/robot/freertos.c ****   * 4. This software, including modifications and/or derivative works of this 
  28:Core/Src/robot/freertos.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Core/Src/robot/freertos.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Core/Src/robot/freertos.c ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Core/Src/robot/freertos.c ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 2


  32:Core/Src/robot/freertos.c ****   *    this license. 
  33:Core/Src/robot/freertos.c ****   *
  34:Core/Src/robot/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Core/Src/robot/freertos.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Core/Src/robot/freertos.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Core/Src/robot/freertos.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Core/Src/robot/freertos.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Core/Src/robot/freertos.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Core/Src/robot/freertos.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Core/Src/robot/freertos.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Core/Src/robot/freertos.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Core/Src/robot/freertos.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Core/Src/robot/freertos.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Core/Src/robot/freertos.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Core/Src/robot/freertos.c ****   *
  47:Core/Src/robot/freertos.c ****   ******************************************************************************
  48:Core/Src/robot/freertos.c ****   */
  49:Core/Src/robot/freertos.c **** /* USER CODE END Header */
  50:Core/Src/robot/freertos.c **** 
  51:Core/Src/robot/freertos.c **** /* Includes ------------------------------------------------------------------*/
  52:Core/Src/robot/freertos.c **** #include "FreeRTOS.h"
  53:Core/Src/robot/freertos.c **** #include "task.h"
  54:Core/Src/robot/freertos.c **** #include "main.h"
  55:Core/Src/robot/freertos.c **** #include "cmsis_os.h"
  56:Core/Src/robot/freertos.c **** 
  57:Core/Src/robot/freertos.c **** /* Private includes ----------------------------------------------------------*/
  58:Core/Src/robot/freertos.c **** /* USER CODE BEGIN Includes */
  59:Core/Src/robot/freertos.c **** #include "usb_device.h"
  60:Core/Src/robot/freertos.c **** /* USER CODE END Includes */
  61:Core/Src/robot/freertos.c **** 
  62:Core/Src/robot/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  63:Core/Src/robot/freertos.c **** /* USER CODE BEGIN PTD */
  64:Core/Src/robot/freertos.c **** 
  65:Core/Src/robot/freertos.c **** /* USER CODE END PTD */
  66:Core/Src/robot/freertos.c **** 
  67:Core/Src/robot/freertos.c **** /* Private define ------------------------------------------------------------*/
  68:Core/Src/robot/freertos.c **** /* USER CODE BEGIN PD */
  69:Core/Src/robot/freertos.c **** 
  70:Core/Src/robot/freertos.c **** /* USER CODE END PD */
  71:Core/Src/robot/freertos.c **** 
  72:Core/Src/robot/freertos.c **** /* Private macro -------------------------------------------------------------*/
  73:Core/Src/robot/freertos.c **** /* USER CODE BEGIN PM */
  74:Core/Src/robot/freertos.c **** 
  75:Core/Src/robot/freertos.c **** /* USER CODE END PM */
  76:Core/Src/robot/freertos.c **** 
  77:Core/Src/robot/freertos.c **** /* Private variables ---------------------------------------------------------*/
  78:Core/Src/robot/freertos.c **** /* USER CODE BEGIN Variables */
  79:Core/Src/robot/freertos.c **** 
  80:Core/Src/robot/freertos.c **** /* USER CODE END Variables */
  81:Core/Src/robot/freertos.c **** osThreadId defaultTaskHandle;
  82:Core/Src/robot/freertos.c **** uint32_t defaultTaskBuffer[256];
  83:Core/Src/robot/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
  84:Core/Src/robot/freertos.c **** osThreadId RoboSequenceHandle;
  85:Core/Src/robot/freertos.c **** uint32_t RoboSequenceBuffer[1024];
  86:Core/Src/robot/freertos.c **** osStaticThreadDef_t RoboSequenceControlBlock;
  87:Core/Src/robot/freertos.c **** osThreadId loggingHandle;
  88:Core/Src/robot/freertos.c **** uint32_t loggingBuffer[1024];
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 3


  89:Core/Src/robot/freertos.c **** osStaticThreadDef_t loggingControlBlock;
  90:Core/Src/robot/freertos.c **** 
  91:Core/Src/robot/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  92:Core/Src/robot/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  93:Core/Src/robot/freertos.c **** 
  94:Core/Src/robot/freertos.c **** /* USER CODE END FunctionPrototypes */
  95:Core/Src/robot/freertos.c **** 
  96:Core/Src/robot/freertos.c **** void StartDefaultTask(void const *argument);
  97:Core/Src/robot/freertos.c **** void RobotThread(void const *argument);
  98:Core/Src/robot/freertos.c **** void LoggingThread(void const *argument);
  99:Core/Src/robot/freertos.c **** 
 100:Core/Src/robot/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 101:Core/Src/robot/freertos.c **** 
 102:Core/Src/robot/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
 103:Core/Src/robot/freertos.c **** void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskSt
 104:Core/Src/robot/freertos.c **** 
 105:Core/Src/robot/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
 106:Core/Src/robot/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
 107:Core/Src/robot/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
 108:Core/Src/robot/freertos.c **** 
 109:Core/Src/robot/freertos.c **** void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskSt
 110:Core/Src/robot/freertos.c **** {
  28              		.loc 1 110 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 111:Core/Src/robot/freertos.c ****         *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  34              		.loc 1 111 0
  35 0000 034B     		ldr	r3, .L2
  36 0002 0360     		str	r3, [r0]
 112:Core/Src/robot/freertos.c ****         *ppxIdleTaskStackBuffer = &xIdleStack[0];
  37              		.loc 1 112 0
  38 0004 034B     		ldr	r3, .L2+4
  39 0006 0B60     		str	r3, [r1]
 113:Core/Src/robot/freertos.c ****         *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  40              		.loc 1 113 0
  41 0008 4FF48073 		mov	r3, #256
  42 000c 1360     		str	r3, [r2]
 114:Core/Src/robot/freertos.c ****         /* place for user code */
 115:Core/Src/robot/freertos.c **** }
  43              		.loc 1 115 0
  44 000e 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0010 00000000 		.word	.LANCHOR0
  49 0014 00000000 		.word	.LANCHOR1
  50              		.cfi_endproc
  51              	.LFE131:
  53              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  54              		.align	1
  55              		.global	MX_FREERTOS_Init
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 4


  59              		.fpu fpv4-sp-d16
  61              	MX_FREERTOS_Init:
  62              	.LFB132:
 116:Core/Src/robot/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 117:Core/Src/robot/freertos.c **** 
 118:Core/Src/robot/freertos.c **** /**
 119:Core/Src/robot/freertos.c ****   * @brief  FreeRTOS initialization
 120:Core/Src/robot/freertos.c ****   * @param  None
 121:Core/Src/robot/freertos.c ****   * @retval None
 122:Core/Src/robot/freertos.c ****   */
 123:Core/Src/robot/freertos.c **** void MX_FREERTOS_Init(void)
 124:Core/Src/robot/freertos.c **** {
  63              		.loc 1 124 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 88
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67 0000 70B5     		push	{r4, r5, r6, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 16
  70              		.cfi_offset 4, -16
  71              		.cfi_offset 5, -12
  72              		.cfi_offset 6, -8
  73              		.cfi_offset 14, -4
  74 0002 96B0     		sub	sp, sp, #88
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 104
 125:Core/Src/robot/freertos.c ****         /* USER CODE BEGIN Init */
 126:Core/Src/robot/freertos.c **** 
 127:Core/Src/robot/freertos.c ****         /* USER CODE END Init */
 128:Core/Src/robot/freertos.c **** 
 129:Core/Src/robot/freertos.c ****         /* USER CODE BEGIN RTOS_MUTEX */
 130:Core/Src/robot/freertos.c ****         /* add mutexes, ... */
 131:Core/Src/robot/freertos.c ****         /* USER CODE END RTOS_MUTEX */
 132:Core/Src/robot/freertos.c **** 
 133:Core/Src/robot/freertos.c ****         /* USER CODE BEGIN RTOS_SEMAPHORES */
 134:Core/Src/robot/freertos.c ****         /* add semaphores, ... */
 135:Core/Src/robot/freertos.c ****         /* USER CODE END RTOS_SEMAPHORES */
 136:Core/Src/robot/freertos.c **** 
 137:Core/Src/robot/freertos.c ****         /* USER CODE BEGIN RTOS_TIMERS */
 138:Core/Src/robot/freertos.c ****         /* start timers, add new ones, ... */
 139:Core/Src/robot/freertos.c ****         /* USER CODE END RTOS_TIMERS */
 140:Core/Src/robot/freertos.c **** 
 141:Core/Src/robot/freertos.c ****         /* Create the thread(s) */
 142:Core/Src/robot/freertos.c ****         /* definition and creation of defaultTask */
 143:Core/Src/robot/freertos.c ****         osThreadStaticDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 256, defaultTaskBuffe
  77              		.loc 1 143 0
  78 0004 164C     		ldr	r4, .L6
  79 0006 0FAD     		add	r5, sp, #60
  80 0008 2646     		mov	r6, r4
  81 000a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
  82 000c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
  83 000e 96E80700 		ldm	r6, {r0, r1, r2}
  84 0012 85E80700 		stm	r5, {r0, r1, r2}
 144:Core/Src/robot/freertos.c ****         defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
  85              		.loc 1 144 0
  86 0016 0021     		movs	r1, #0
  87 0018 0FA8     		add	r0, sp, #60
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 5


  88 001a FFF7FEFF 		bl	osThreadCreate
  89              	.LVL1:
  90 001e 114B     		ldr	r3, .L6+4
  91 0020 1860     		str	r0, [r3]
 145:Core/Src/robot/freertos.c **** 
 146:Core/Src/robot/freertos.c ****         /* definition and creation of RoboSequence */
 147:Core/Src/robot/freertos.c ****         osThreadStaticDef(RoboSequence, RobotThread, osPriorityRealtime, 0, 1024, RoboSequenceBuffe
  92              		.loc 1 147 0
  93 0022 08AD     		add	r5, sp, #32
  94 0024 04F11C06 		add	r6, r4, #28
  95 0028 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
  96 002a 0FC5     		stmia	r5!, {r0, r1, r2, r3}
  97 002c 96E80700 		ldm	r6, {r0, r1, r2}
  98 0030 85E80700 		stm	r5, {r0, r1, r2}
 148:Core/Src/robot/freertos.c ****         RoboSequenceHandle = osThreadCreate(osThread(RoboSequence), NULL);
  99              		.loc 1 148 0
 100 0034 0021     		movs	r1, #0
 101 0036 08A8     		add	r0, sp, #32
 102 0038 FFF7FEFF 		bl	osThreadCreate
 103              	.LVL2:
 104 003c 0A4B     		ldr	r3, .L6+8
 105 003e 1860     		str	r0, [r3]
 149:Core/Src/robot/freertos.c **** 
 150:Core/Src/robot/freertos.c ****         /* definition and creation of logging */
 151:Core/Src/robot/freertos.c ****         osThreadStaticDef(logging, LoggingThread, osPriorityLow, 0, 1024, loggingBuffer, &loggingCo
 106              		.loc 1 151 0
 107 0040 01AD     		add	r5, sp, #4
 108 0042 3834     		adds	r4, r4, #56
 109 0044 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 110 0046 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 111 0048 94E80700 		ldm	r4, {r0, r1, r2}
 112 004c 85E80700 		stm	r5, {r0, r1, r2}
 152:Core/Src/robot/freertos.c ****         loggingHandle = osThreadCreate(osThread(logging), NULL);
 113              		.loc 1 152 0
 114 0050 0021     		movs	r1, #0
 115 0052 01A8     		add	r0, sp, #4
 116 0054 FFF7FEFF 		bl	osThreadCreate
 117              	.LVL3:
 118 0058 044B     		ldr	r3, .L6+12
 119 005a 1860     		str	r0, [r3]
 153:Core/Src/robot/freertos.c **** 
 154:Core/Src/robot/freertos.c ****         /* USER CODE BEGIN RTOS_THREADS */
 155:Core/Src/robot/freertos.c ****         /* add threads, ... */
 156:Core/Src/robot/freertos.c ****         /* USER CODE END RTOS_THREADS */
 157:Core/Src/robot/freertos.c **** 
 158:Core/Src/robot/freertos.c ****         /* USER CODE BEGIN RTOS_QUEUES */
 159:Core/Src/robot/freertos.c ****         /* add queues, ... */
 160:Core/Src/robot/freertos.c ****         /* USER CODE END RTOS_QUEUES */
 161:Core/Src/robot/freertos.c **** }
 120              		.loc 1 161 0
 121 005c 16B0     		add	sp, sp, #88
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 16
 124              		@ sp needed
 125 005e 70BD     		pop	{r4, r5, r6, pc}
 126              	.L7:
 127              		.align	2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 6


 128              	.L6:
 129 0060 00000000 		.word	.LANCHOR2
 130 0064 00000000 		.word	defaultTaskHandle
 131 0068 00000000 		.word	RoboSequenceHandle
 132 006c 00000000 		.word	loggingHandle
 133              		.cfi_endproc
 134              	.LFE132:
 136              		.comm	loggingControlBlock,84,4
 137              		.comm	loggingBuffer,4096,4
 138              		.comm	loggingHandle,4,4
 139              		.comm	RoboSequenceControlBlock,84,4
 140              		.comm	RoboSequenceBuffer,4096,4
 141              		.comm	RoboSequenceHandle,4,4
 142              		.comm	defaultTaskControlBlock,84,4
 143              		.comm	defaultTaskBuffer,1024,4
 144              		.comm	defaultTaskHandle,4,4
 145              		.section	.rodata
 146              		.align	2
 147              		.set	.LANCHOR2,. + 0
 148              	.LC6:
 149 0000 18000000 		.word	.LC0
 150 0004 00000000 		.word	StartDefaultTask
 151 0008 0000     		.short	0
 152 000a 0000     		.space	2
 153 000c 00000000 		.word	0
 154 0010 00010000 		.word	256
 155 0014 00000000 		.word	defaultTaskBuffer
 156 0018 00000000 		.word	defaultTaskControlBlock
 157              	.LC7:
 158 001c 08000000 		.word	.LC2
 159 0020 00000000 		.word	RobotThread
 160 0024 0300     		.short	3
 161 0026 0000     		.space	2
 162 0028 00000000 		.word	0
 163 002c 00040000 		.word	1024
 164 0030 00000000 		.word	RoboSequenceBuffer
 165 0034 00000000 		.word	RoboSequenceControlBlock
 166              	.LC8:
 167 0038 00000000 		.word	.LC4
 168 003c 00000000 		.word	LoggingThread
 169 0040 FEFF     		.short	-2
 170 0042 0000     		.space	2
 171 0044 00000000 		.word	0
 172 0048 00040000 		.word	1024
 173 004c 00000000 		.word	loggingBuffer
 174 0050 00000000 		.word	loggingControlBlock
 175              		.section	.bss.xIdleStack,"aw",%nobits
 176              		.align	2
 177              		.set	.LANCHOR1,. + 0
 180              	xIdleStack:
 181 0000 00000000 		.space	1024
 181      00000000 
 181      00000000 
 181      00000000 
 181      00000000 
 182              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 183              		.align	2
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 7


 184              		.set	.LANCHOR0,. + 0
 187              	xIdleTaskTCBBuffer:
 188 0000 00000000 		.space	84
 188      00000000 
 188      00000000 
 188      00000000 
 188      00000000 
 189              		.section	.rodata.str1.4,"aMS",%progbits,1
 190              		.align	2
 191              	.LC4:
 192 0000 6C6F6767 		.ascii	"logging\000"
 192      696E6700 
 193              	.LC2:
 194 0008 526F626F 		.ascii	"RoboSequence\000"
 194      53657175 
 194      656E6365 
 194      00
 195 0015 000000   		.space	3
 196              	.LC0:
 197 0018 64656661 		.ascii	"defaultTask\000"
 197      756C7454 
 197      61736B00 
 198              		.text
 199              	.Letext0:
 200              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 201              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 202              		.file 4 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeR
 203              		.file 5 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeR
 204              		.file 6 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/FreeR
 205              		.file 7 "Core/Inc/FreeRTOSConfig.h"
 206              		.file 8 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Include/core_cm
 207              		.file 9 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Drivers/CMSIS/Device/ST/STM32
 208              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 209              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 210              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eab
 211              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 212              		.file 14 "C:/Users/073be/STM32Cube/Repository/STM32Cube_FW_F4_V1.23.0/Middlewares/Third_Party/Free
 213              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
ARM GAS  C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:18     .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:25     .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:48     .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:54     .text.MX_FREERTOS_Init:00000000 $t
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:61     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:129    .text.MX_FREERTOS_Init:00000060 $d
                            *COM*:00000004 defaultTaskHandle
                            *COM*:00000004 RoboSequenceHandle
                            *COM*:00000004 loggingHandle
                            *COM*:00000054 loggingControlBlock
                            *COM*:00001000 loggingBuffer
                            *COM*:00000054 RoboSequenceControlBlock
                            *COM*:00001000 RoboSequenceBuffer
                            *COM*:00000054 defaultTaskControlBlock
                            *COM*:00000400 defaultTaskBuffer
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:146    .rodata:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:176    .bss.xIdleStack:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:180    .bss.xIdleStack:00000000 xIdleStack
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:183    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:187    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\073be\AppData\Local\Temp\ccyRy0bg.s:190    .rodata.str1.4:00000000 $d

UNDEFINED SYMBOLS
osThreadCreate
StartDefaultTask
RobotThread
LoggingThread
